{"version":3,"sources":["components/Navbar/bdu_white_logo.png","components/Pages/Login/BDU_memberArea_512.png","constants/action-types.js","reducers/userReducer.js","reducers/tournamentReducer.js","reducers/bugReducer.js","reducers/index.js","store/index.js","constants/applicationConstants.js","actions/actionHelpers.js","helpers.js","actions/AuthActions.js","components/Pages/Registration/FieldEditor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/Pages/Login/Login.js","components/Pages/profilePages/UserForm.js","components/Pages/profilePages/Signup/Signup.js","actions/RegistrationActions.js","components/Pages/Home/UserTournamentList.js","components/Spinner/Spinner.js","components/Pages/Home/Home.js","components/Pages/profilePages/Profile/Profile.js","actions/UserActions.js","components/FlexTable/FlexTable.js","components/Pages/tournamentPages/TournamentList/RegistrationModal/RegistrationModal.js","actions/TournamentActions.js","components/Pages/tournamentPages/TournamentList/TournamentRowCollapse.js","components/Pages/tournamentPages/TournamentList/TournamentList.js","components/Pages/tournamentPages/TournamentForm.js","components/Pages/tournamentPages/CreateTournament/CreateTournament.js","components/Pages/tournamentPages/EditTournament/EditTournament.js","components/Pages/MemberList/MemberRowCollapse.js","components/Pages/MemberList/MemberList.js","components/Pages/Registration/Registration.js","components/Pages/BugList/BugList.js","components/Pages/BugList/BugReportForm.js","components/Pages/Dashboard/NumberCard.js","components/Pages/Dashboard/Dashboard.js","components/Pages/WikiLinkList/CreateWikiLinkModal.js","components/Pages/WikiLinkList/WikiLinkList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_BUG","initialState","isAuthenticated","authenticatedUserId","authCheckHasFinished","users","expandedUserId","userReducer","state","action","type","payload","authenticatedUser","map","user","id","tournaments","filter","_pivot_id","registrationId","registration","_pivot_user_id","tournament","userAlreadyExists","findIndex","userId","tournamentList","showPreviousTournaments","expandedTournamentId","tournamentReducer","tournamentIndex","tournamentId","_pivot_tournament_id","bugList","rootReducer","combineReducers","bug","bugId","status","newBug","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BASE_URL","process","alertTypes","INFO","SUCCESS","WARNING","DANGER","attendanceStatuses","Registered","Went","successTypes","label","canHavePartner","registrationRoles","DATE_FORMAT","message","NotificationManager","info","success","warning","error","calculateTotalUserDebt","reduce","total","_pivot_price_paid","_pivot_price_owed","renameTournamentFields","ort","startdate","enddate","speakerprice","judgeprice","teamspots","judgespots","rankingvalue","comments","renameUserFields","location","startDate","endDate","speakerPrice","judgePrice","teamSpots","judgeSpots","rankingFactor","comment","vorname","name","firstName","lastName","changeTimeOut","getAppData","dispatch","a","async","fetch","method","credentials","response","json","currentUser","Promise","all","responses","res","login","email","password","headers","body","JSON","stringify","triggerAlert","signup","gender","food","signupPassword","signup_password","logout","then","NavbarDropdown","link","pathname","children","childrenContainActiveLink","child","props","url","includes","className","href","role","data-toggle","aria-haspopup","aria-expanded","icon","title","aria-labelledby","NavbarLink","isLinkActive","onClick","key","to","Navbar","history","useDispatch","useSelector","find","isAdmin","position","navbarLinks","push","size","totalDebtOfUser","Intl","NumberFormat","style","currency","format","src","logo","width","alt","data-target","aria-controls","aria-label","_link","Footer","Date","getFullYear","Login","useState","setEmail","setPassword","membersAreaImage","onSubmit","e","preventDefault","htmlFor","onChange","target","value","autoComplete","aria-describedby","placeholder","required","rel","UserForm","context","handleSubmit","confirmPassword","userFormState","setUserFormState","passwordsMatch","setPasswordsMatch","confirmPasswordInput","useRef","handleChange","confirmPasswordClass","length","isEditContext","enableSubmit","focus","ref","disabled","cursor","Signup","patchRegistration","patchedRegistration","Object","keys","newFields","UserTournamentList","actionRefs","React","createRef","_deleteRegistration","confirmAlert","buttons","class","deleteRegistration","tournamentTableColumns","dataField","text","hidden","sort","wordBreak","isDummyField","formatter","cellContent","row","moment","classes","headerClasses","quantity","statusName","stopPropagation","bootstrap4","hover","keyField","data","columns","defaultSorted","order","rowEvents","rowClasses","bordered","Spinner","xl","TransactionPurposeModal","isOpen","transactionPurpose","isLoading","closeModal","str","el","document","createElement","setAttribute","left","appendChild","select","execCommand","removeChild","copyStringToClipboard","Home","modalIsOpen","setModalIsOpen","undefined","setTransactionPurpose","isLoadingTransactionPurpose","setIsLoadingTransactionPurpose","substring","tp","Profile","_id","_email","_firstName","_lastName","_gender","_food","newTournamentCount","new_tournament_count","updateUser","FlexTable","rowIndex","tableName","this","openCollapse","$","wantedCollapse","wantedTableRow","heightOfOpenCollapse","offset","top","height","collapse","stop","animate","scrollTop","headColumns","bodyRows","striped","sortColumn","actionOnRowClick","handleToggleCollapse","bind","tableClass","headColumn","headerIndex","bodyRow","column","columnIndex","Component","mapDispatchToProps","register","independent","funding","partner1","partner2","teamName","getState","tournament_id","user_id","is_independent","teamname","RegistrationModal","handlePostRegister","change","setState","_register","modal","tabIndex","aria-hidden","data-dismiss","parseInt","connect","updateTournament","restTournament","TournamentRowCollapse","forwardToRegistration","handleDeleteClick","deleteTournament","linkLabel","tournamentTableRows","deadline","accommodation","league","userTableRows","_pivot_role","_pivot_teamname","_pivot_comment","_pivot_created_at","b","isAfter","tableColumns","sortFunc","isBefore","language","toUpperCase","TournamentList","tId","handleToggle","useCallback","expandRow","renderer","onlyOneExpanding","onExpand","isExpand","setTimeout","scrollIntoView","behavior","block","expanded","TournamentForm","formProps","date","toISOString","substr","initialFormValues","formValues","setFormValues","disableSubmit","CreateTournament","createTournament","EditTournament","match","params","useEffect","getTournament","restTournamentProps","_tournament","MemberRowCollapse","last_mail","totalDebt","registrationTableColumns","price_paid","membersTableColumns","MemberList","enrichedUserList","totalPoints","subtract","_pivot_points","totalTournaments","totalTournamentsAsJudge","judgingRatio","Math","round","FieldEditor","event","persist","fieldName","clearTimeout","Type","CHECKBOX","checked","SELECT","options","fieldValue","TEXT","defaultValue","defaultChecked","optionValue","defaultProps","haveBugsLoaded","Registration","handleRegUpdate","updateReg","userList","regId","attendanceStatus","_pivot_attended","_pivot_partner1","_pivot_partner2","successObj","_pivot_success","registrationTableRows","header","field","editType","_pivot_is_independent","_pivot_funding","parseFloat","adminOnlyEdit","toLowerCase","acc","bel","_pivot_transaction_from","transaction_from","adminOnly","_pivot_transaction_date","transaction_date","i","fontWeight","editable","editorRenderer","editorProps","cellEdit","cellEditFactory","mode","blurToSave","nonEditableRows","nonEditRowIds","regUser","BugReportForm","description","rows","getBugList","setBugStatus","deleteBug","handleUpdate","handleDelete","showAll","setShowAll","headerStyle","maxWidth","cell","NumberCard","number","percentageChange","roundedPercentageChange","COLORS","Dashboard","debtArray","setDebtArray","fetchClubDebt","firstTournamentDate","min","valueOf","totalUsers","activeUsers","activeUsersLastYear","registeredUsers","victoryData","Array","abs","duration","diff","asDays","add","count","tournamentUsers","some","activeUsersGenderData","x","Debt","dataKey","stroke","fill","dot","strokeDasharray","tick","fontSize","tickFormatter","unit","labelFormatter","innerRadius","outerRadius","startAngle","endAngle","cy","percent","labelLine","entry","index","CreateWikiLinkModal","handleAddedWikiLink","Modal","setAppElement","shouldCloseOnOverlayClick","onRequestClose","formData","FormData","jsonData","fromEntries","topic","addedAt","entryList","setEntryList","fetchWikiLinks","links","linkId","deleteWikiLink","withRouter","AuthenticationRoute","ComponentToRender","component","rest","render","PrivateRoute","AdminRoute","padding","path","BugList","exact","WikiLinkList","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","basename","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d217a7eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bdu_white_logo.10ca96f4.png\";","module.exports = __webpack_public_path__ + \"static/media/BDU_memberArea_512.e6068b21.png\";","// User Actions\nexport const CHECK_AUTHENTICATION = 'CHECK_AUTHENTICATION';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_USER_LIST = 'SET_USER_LIST';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const ADD_TO_USER_ARRAY = 'ADD_TO_USER_ARRAY';\nexport const SET_EXPANDED_USER_ID = 'SET_EXPANDED_USER_ID';\n\n// Registration Actions\nexport const ADD_REGISTRATION = 'ADD_REGISTRATION';\nexport const DELETE_REGISTRATION = 'DELETE_REGISTRATION';\nexport const PATCH_REGISTRATION = 'PATCH_REGISTRATION';\n\n// Tournament Actions\nexport const GET_TOURNAMENT = 'GET_TOURNAMENT';\nexport const SET_TOURNAMENT_LIST = 'SET_TOURNAMENT_LIST';\nexport const ADD_TOURNAMENT = 'ADD_TOURNAMENT';\nexport const UPDATE_TOURNAMENT = 'UPDATE_TOURNAMENT';\nexport const DELETE_TOURNAMENT = 'DELETE_TOURNAMENT';\nexport const TOGGLE_SHOW_PREV_TOURNAMENTS = 'TOGGLE_SHOW_PREV_TOURNAMENTS';\nexport const SET_EXPANDED_TOURNAMENT_ID = 'SET_EXPANDED_TOURNAMENT_ID';\n\n// Bug Actions\nexport const GET_ALL_BUGS = 'GET_ALL_BUGS';\nexport const SET_BUG_STATUS = 'SET_BUG_STATUS';\nexport const ADD_BUG = 'ADD_BUG';\nexport const REMOVE_BUG = 'REMOVE_BUG';\n","/* eslint-disable no-case-declarations,camelcase */\nimport {\n  CHECK_AUTHENTICATION,\n  LOGOUT,\n  DELETE_REGISTRATION,\n  SET_USER_LIST,\n  UPDATE_USER,\n  ADD_TO_USER_ARRAY,\n  PATCH_REGISTRATION,\n  SET_EXPANDED_USER_ID,\n  ADD_REGISTRATION,\n} from '../constants/action-types';\n\nconst initialState = {\n  isAuthenticated: false,\n  authenticatedUserId: null,\n  authCheckHasFinished: false,\n  users: [],\n  expandedUserId: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_AUTHENTICATION:\n      return {\n        ...state,\n        isAuthenticated: action.payload.isAuthenticated,\n        authenticatedUserId: action.payload.authenticatedUserId,\n        authCheckHasFinished: action.payload.authCheckHasFinished,\n      };\n    case LOGOUT:\n      return { ...state, isAuthenticated: false, authenticatedUser: {} };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user.id !== action.payload.user.id) return user;\n          return {\n            ...action.payload.user,\n            tournaments: user.tournaments,\n          };\n        }),\n      };\n    case SET_USER_LIST:\n      return {\n        ...state,\n        users: action.payload.users,\n      };\n    case DELETE_REGISTRATION:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          return {\n            ...user,\n            tournaments: user.tournaments.filter(\n              ({ _pivot_id }) => _pivot_id !== action.payload.registrationId,\n            ),\n          };\n        }),\n      };\n    case ADD_REGISTRATION:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user.id !== action.payload.registration._pivot_user_id)\n            return user;\n          return {\n            ...user,\n            tournaments: [\n              ...user.tournaments,\n              { ...action.payload.tournament, ...action.payload.registration },\n            ],\n          };\n        }),\n      };\n    case PATCH_REGISTRATION:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (!user.tournaments) return user;\n          return {\n            ...user,\n            tournaments: user.tournaments.map(tournament => {\n              if (\n                tournament._pivot_id &&\n                tournament._pivot_id === action.payload.registrationId\n              )\n                return {\n                  ...tournament,\n                  ...action.payload.registration,\n                };\n              return tournament;\n            }),\n          };\n        }),\n      };\n    case ADD_TO_USER_ARRAY:\n      const userAlreadyExists =\n        state.users.findIndex(({ id }) => id === action.payload.user.id) > -1;\n      if (userAlreadyExists) return state;\n      return {\n        ...state,\n        users: [...state.users, action.payload.user],\n      };\n    case SET_EXPANDED_USER_ID:\n      return {\n        ...state,\n        expandedUserId: action.payload.userId,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","/* eslint-disable camelcase */\nimport {\n  ADD_REGISTRATION,\n  ADD_TOURNAMENT,\n  DELETE_REGISTRATION,\n  DELETE_TOURNAMENT,\n  GET_TOURNAMENT,\n  PATCH_REGISTRATION,\n  SET_EXPANDED_TOURNAMENT_ID,\n  SET_TOURNAMENT_LIST,\n  TOGGLE_SHOW_PREV_TOURNAMENTS,\n  UPDATE_TOURNAMENT,\n} from '../constants/action-types';\n\nconst initialState = {\n  tournamentList: [],\n  showPreviousTournaments: false,\n  expandedTournamentId: null,\n};\n\nconst tournamentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TOURNAMENT:\n      const tournamentIndex = state.tournamentList.findIndex(\n        ({ id }) => id === action.payload.tournament.id,\n      );\n      if (tournamentIndex > -1) {\n        const { tournamentList } = state;\n        tournamentList[tournamentIndex] = action.payload.tournament;\n        return {\n          ...state,\n          tournamentList,\n        };\n      }\n      return {\n        ...state,\n        tournamentList: [...state.tournamentList, action.payload.tournament],\n      };\n    case SET_TOURNAMENT_LIST:\n      return {\n        ...state,\n        tournamentList: action.payload.tournaments,\n      };\n    case ADD_TOURNAMENT:\n      return {\n        ...state,\n        tournamentList: [...state.tournamentList, action.payload.tournament],\n      };\n    case UPDATE_TOURNAMENT:\n      return {\n        ...state,\n        tournamentList: state.tournamentList.map(tournament => {\n          if (tournament.id !== action.payload.tournament.id) return tournament;\n          return {\n            ...action.payload.tournament,\n            users: tournament.users,\n          };\n        }),\n      };\n    case DELETE_TOURNAMENT:\n      return {\n        ...state,\n        tournamentList: state.tournamentList.filter(({ id }) => id !== action.payload.tournamentId),\n      };\n    case TOGGLE_SHOW_PREV_TOURNAMENTS:\n      return {\n        ...state,\n        showPreviousTournaments: !state.showPreviousTournaments,\n      };\n    case DELETE_REGISTRATION:\n      return {\n        ...state,\n        tournamentList: state.tournamentList.map(tournament => {\n          return {\n            ...tournament,\n            users: tournament.users.filter(\n              ({ _pivot_id }) => _pivot_id !== action.payload.registrationId,\n            ),\n          };\n        }),\n      };\n    case ADD_REGISTRATION:\n      return {\n        ...state,\n        tournamentList: state.tournamentList.map(tournament => {\n          if (tournament.id !== action.payload.registration._pivot_tournament_id) return tournament;\n          return {\n            ...tournament,\n            users: [\n              ...tournament.users,\n              { ...action.payload.user, ...action.payload.registration },\n            ],\n          };\n        }),\n      };\n    case PATCH_REGISTRATION:\n      return {\n        ...state,\n        tournamentList: state.tournamentList.map(tournament => {\n          return {\n            ...tournament,\n            users: tournament.users.map(user => {\n              if (user._pivot_id && user._pivot_id === action.payload.registrationId)\n                return {\n                  ...user,\n                  ...action.payload.registration,\n                };\n              return user;\n            }),\n          };\n        }),\n      };\n    case SET_EXPANDED_TOURNAMENT_ID:\n      return {\n        ...state,\n        expandedTournamentId:\n          action.payload.tournamentId === state.expandedTournamentId\n            ? null\n            : action.payload.tournamentId,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tournamentReducer;\n","import {\n  ADD_BUG,\n  GET_ALL_BUGS,\n  REMOVE_BUG,\n  SET_BUG_STATUS,\n} from '../constants/action-types';\n\nconst initialState = {\n  bugList: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_BUGS:\n      return {\n        ...state,\n        bugList: action.payload.bugList,\n      };\n    case SET_BUG_STATUS:\n      return {\n        ...state,\n        bugList: state.bugList.map(bug => {\n          if (bug.id === action.payload.bugId)\n            return { ...bug, status: action.payload.status };\n          return bug;\n        }),\n      };\n    case ADD_BUG:\n      return {\n        ...state,\n        bugList: [...state.bugList, action.payload.newBug],\n      };\n    case REMOVE_BUG:\n      return {\n        ...state,\n        bugList: state.bugList.filter(({ id }) => id !== action.payload.bugId),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport tournamentReducer from './tournamentReducer';\nimport bugReducer from './bugReducer';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  tournament: tournamentReducer,\n  bug: bugReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\n// enable redux dev tools when in development\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","export const BASE_URL = process.env.REACT_APP_SERVER_URL;\n\nexport const alertTypes = {\n  INFO: 'INFO',\n  SUCCESS: 'SUCCESS',\n  WARNING: 'WARNING',\n  DANGER: 'DANGER',\n};\n\nexport const attendanceStatuses = {\n  Registered: 0,\n  Went: 1,\n  'Can Go': 2,\n  'Didn´t Go': 3,\n};\n\nexport const successTypes = [\n  {\n    id: 'none',\n    label: 'none',\n    canHavePartner: false,\n  },\n  {\n    id: 'judge',\n    label: 'judge',\n    canHavePartner: false,\n  },\n  {\n    id: 'break',\n    label: 'break',\n    canHavePartner: true,\n  },\n  {\n    id: 'final',\n    label: 'final',\n    canHavePartner: true,\n  },\n  {\n    id: 'win',\n    label: 'win',\n    canHavePartner: true,\n  },\n  {\n    id: 'judge2',\n    label: 'judge for different institution',\n    canHavePartner: false,\n  },\n  {\n    id: 'break2',\n    label: 'break for different institution',\n    canHavePartner: true,\n  },\n  {\n    id: 'final2',\n    label: 'final for different institution',\n    canHavePartner: true,\n  },\n  {\n    id: 'win2',\n    label: 'win for different institution',\n    canHavePartner: true,\n  },\n  {\n    id: 'breakESL',\n    label: 'break ESL',\n    canHavePartner: true,\n  },\n  {\n    id: 'finalESL',\n    label: 'final ESL',\n    canHavePartner: true,\n  },\n  {\n    id: 'winESL',\n    label: 'win ESL',\n    canHavePartner: true,\n  },\n  {\n    id: 'break2ESL',\n    label: 'break ESL for different institution',\n    canHavePartner: true,\n  },\n  {\n    id: 'final2ESL',\n    label: 'final ESL for different institution',\n    canHavePartner: true,\n  },\n  {\n    id: 'win2ESL',\n    label: 'win ESL for different institution',\n    canHavePartner: true,\n  },\n];\n\nexport const registrationRoles = {\n  SPEAKER: 'speaker',\n  JUDGE: 'judge',\n};\n\nexport const DATE_FORMAT = 'MMM DD, YYYY';\n\nexport const DATE_TIME_FORMAT = 'LLL';\n","import { NotificationManager } from 'react-notifications';\nimport { alertTypes } from '../constants/applicationConstants';\n\nexport default (message, type) => {\n  switch (type) {\n    case alertTypes.INFO:\n      NotificationManager.info(message);\n      break;\n    case alertTypes.SUCCESS:\n      NotificationManager.success(message);\n      break;\n    case alertTypes.WARNING:\n      NotificationManager.warning(message);\n      break;\n    case alertTypes.DANGER:\n      NotificationManager.error(message);\n      break;\n    default:\n    // do nothing\n  }\n};\n","import triggerAlert from './actions/actionHelpers';\nimport { alertTypes } from './constants/applicationConstants';\n\nexport function calculateTotalUserDebt(user) {\n  if (!user.tournaments) return undefined;\n  return user.tournaments.reduce((total, tournament) => {\n    const debt = tournament._pivot_price_paid - tournament._pivot_price_owed;\n    return total - debt;\n  }, 0);\n}\n\nexport const renameTournamentFields = ({\n  ort,\n  startdate,\n  enddate,\n  speakerprice,\n  judgeprice,\n  teamspots,\n  judgespots,\n  rankingvalue,\n  comments,\n  ...tournament\n}) => {\n  let users;\n  if (tournament.users) {\n    // eslint-disable-next-line no-use-before-define\n    users = tournament.users.map(renameUserFields);\n  }\n  return {\n    ...tournament,\n    location: ort,\n    startDate: startdate,\n    endDate: enddate,\n    speakerPrice: speakerprice,\n    judgePrice: judgeprice,\n    teamSpots: teamspots,\n    judgeSpots: judgespots,\n    rankingFactor: rankingvalue,\n    comment: comments,\n    users,\n  };\n};\n\nexport const renameUserFields = ({ vorname, name, ...user }) => {\n  let tournaments;\n  if (user.tournaments) {\n    tournaments = user.tournaments.map(renameTournamentFields);\n  }\n  return {\n    ...user,\n    firstName: vorname,\n    lastName: name,\n    tournaments,\n  };\n};\n\nexport function copyStringToClipboard(str) {\n  // Create new element\n  const el = document.createElement('textarea');\n  // Set value (string to be copied)\n  el.value = str;\n  // Set non-editable to avoid focus and move outside of view\n  el.setAttribute('readonly', '');\n  el.style = { position: 'absolute', left: '-9999px' };\n  document.body.appendChild(el);\n  // Select text inside element\n  el.select();\n  // Copy text to clipboard\n  document.execCommand('copy');\n  // Remove temporary element\n  document.body.removeChild(el);\n\n  triggerAlert(`Saved \"${str}\" to clipboard.`, alertTypes.INFO);\n}\n","import { alertTypes, BASE_URL } from '../constants/applicationConstants';\nimport {\n  ADD_TO_USER_ARRAY,\n  CHECK_AUTHENTICATION,\n  LOGOUT,\n  SET_TOURNAMENT_LIST,\n  SET_USER_LIST,\n} from '../constants/action-types';\nimport triggerAlert from './actionHelpers';\nimport { renameTournamentFields, renameUserFields } from '../helpers';\n\nexport const getAppData = () => async dispatch => {\n  const response = await fetch(`${BASE_URL}/currentUser`, {\n    method: 'GET',\n    credentials: 'include',\n  });\n  if (response.status === 200) {\n    const currentUser = await response.json();\n    const responses = await Promise.all([\n      fetch(`${BASE_URL}/tournament`, {\n        method: 'GET',\n        credentials: 'include',\n      }),\n      fetch(`${BASE_URL}/user`, {\n        method: 'GET',\n        credentials: 'include',\n      }),\n    ]);\n    const [tournaments, users] = await Promise.all(\n      responses.map(res => res.json()),\n    );\n    dispatch({\n      type: SET_USER_LIST,\n      payload: {\n        users: users.map(renameUserFields),\n      },\n    });\n    dispatch({\n      type: ADD_TO_USER_ARRAY,\n      payload: { user: [currentUser].map(renameUserFields)[0] },\n    });\n    dispatch({\n      type: SET_TOURNAMENT_LIST,\n      payload: {\n        tournaments: tournaments.map(renameTournamentFields),\n      },\n    });\n    dispatch({\n      type: CHECK_AUTHENTICATION,\n      payload: {\n        isAuthenticated: true,\n        authenticatedUserId: currentUser.id,\n        authCheckHasFinished: true,\n      },\n    });\n  } else {\n    dispatch({\n      type: CHECK_AUTHENTICATION,\n      payload: {\n        isAuthenticated: false,\n        authenticatedUserId: null,\n        authCheckHasFinished: true,\n      },\n    });\n  }\n};\n\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'POST',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  const body = response.json();\n  if (response.status === 200) {\n    dispatch(getAppData());\n  } else if (body.message) triggerAlert(body.message, alertTypes.WARNING);\n  else triggerAlert('Error during login.', alertTypes.WARNING);\n};\n\nexport const signup = ({\n  email,\n  password,\n  firstName,\n  lastName,\n  gender,\n  food,\n  signupPassword,\n}) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'POST',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      vorname: firstName,\n      name: lastName,\n      gender,\n      food,\n      signup_password: signupPassword,\n    }),\n  });\n  const body = response.json();\n  if (response.status === 200) {\n    dispatch(getAppData());\n  } else if (body.message) triggerAlert(body.message, alertTypes.WARNING);\n  else triggerAlert('Error during signup.', alertTypes.WARNING);\n};\n\nexport const logout = () => dispatch =>\n  fetch(`${BASE_URL}/logout`, {\n    method: 'GET',\n    credentials: 'include',\n  }).then(response => {\n    if (response.status === 200) {\n      dispatch({\n        type: LOGOUT,\n        payload: {\n          isAuthenticated: false,\n        },\n      });\n    }\n  });\n","/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Type } from 'react-bootstrap-table2-editor';\n\nlet changeTimeOut;\n\nclass FieldEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    event.persist();\n    const { handleChange, fieldName, type } = this.props;\n    clearTimeout(changeTimeOut);\n    changeTimeOut = setTimeout(\n      () => {\n        handleChange(\n          ['attended', 'partner1', 'partner2'].includes(fieldName)\n            ? parseInt(event.target.value, 10)\n            : type === Type.CHECKBOX\n            ? event.target.checked\n              ? 1\n              : 0\n            : event.target.value,\n          event.target.name,\n        );\n      },\n      type === Type.SELECT ? 0 : 500,\n    );\n  }\n\n  render() {\n    const { type, fieldName, options, fieldValue } = this.props;\n    let { value } = this.props;\n    if (fieldValue !== null) value = fieldValue;\n    switch (type) {\n      case Type.TEXT:\n        return (\n          <input\n            name={fieldName}\n            onChange={this.handleChange}\n            className=\"form-control\"\n            type=\"text\"\n            defaultValue={value}\n          />\n        );\n      case Type.CHECKBOX:\n        return (\n          <input\n            name={fieldName}\n            onChange={this.handleChange}\n            type=\"checkbox\"\n            defaultChecked={!!value}\n          />\n        );\n      case Type.SELECT:\n        return (\n          <select\n            name={fieldName}\n            onChange={this.handleChange}\n            defaultValue={value}\n            className=\"form-control\"\n          >\n            {options.map(({ id: optionValue, label }) => (\n              <option key={optionValue} value={optionValue}>\n                {label}\n              </option>\n            ))}\n          </select>\n        );\n      default:\n        return <input className=\"form-control\" type=\"text\" defaultValue={value} />;\n    }\n  }\n}\n\nexport default FieldEditor;\n\nFieldEditor.propTypes = {\n  type: PropTypes.string.isRequired,\n  fieldName: PropTypes.string.isRequired,\n  fieldValue: PropTypes.any,\n  value: PropTypes.any.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object),\n};\n\nFieldEditor.defaultProps = {\n  fieldValue: null,\n  options: [],\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './Navbar.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  User,\n  List,\n  LogOut,\n  Award,\n  LogIn,\n  UserPlus,\n  Shield,\n  Calendar,\n  Users,\n  Edit,\n} from 'react-feather';\n\nimport { logout } from '../../actions/AuthActions';\nimport logo from './bdu_white_logo.png';\nimport { calculateTotalUserDebt } from '../../helpers';\n\nconst NavbarDropdown = ({ link, pathname = '/', children = [] }) => {\n  const childrenContainActiveLink = children\n    .map(child => `/${child.props.link.url}` || '')\n    .includes(pathname);\n\n  return (\n    <div\n      className={`nav-item ${\n        childrenContainActiveLink ? 'active' : ''\n      } dropdown ${link.className}`}\n    >\n      <a\n        className=\"nav-link dropdown-toggle\"\n        href=\"#\"\n        id=\"navbarDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {link.icon}\n        {link.title}\n      </a>\n      <div className=\"dropdown-menu bg-dark\" aria-labelledby=\"navbarDropdown\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst NavbarLink = ({ link, pathname = '/' }) => {\n  const isLinkActive = `/${link.url || ''}` === pathname && !link.onClick;\n  return (\n    <li className={`nav-item ${isLinkActive ? 'active' : ''}`}>\n      {link.onClick ? (\n        <button\n          type=\"button\"\n          className={`nav-link d-flex align-items-center btn btn-link ${link.className}`}\n          onClick={link.onClick}\n        >\n          {link.icon}\n          {link.title}\n        </button>\n      ) : (\n        <Link\n          className={`nav-link d-flex align-items-center ${link.className}`}\n          key={link.title}\n          to={`/${link.url ? link.url : ''}`}\n        >\n          {link.icon}\n          {link.title}\n        </Link>\n      )}\n    </li>\n  );\n};\n\nconst Navbar = ({\n  history: {\n    location: { pathname },\n  },\n}) => {\n  const dispatch = useDispatch();\n  const { isAuthenticated, authenticatedUser, isAdmin } = useSelector(\n    ({ user }) => ({\n      isAuthenticated: user.isAuthenticated,\n      authenticatedUser: user.authenticatedUserId\n        ? user.users.find(({ id }) => user.authenticatedUserId === id)\n        : {},\n      isAdmin: user.authenticatedUserId\n        ? user.users.find(({ id }) => user.authenticatedUserId === id)\n            .position === 1\n        : false,\n    }),\n  );\n\n  const navbarLinks = [];\n  if (isAuthenticated) {\n    navbarLinks.push(\n      ...[\n        {\n          title: 'Tournaments',\n          icon: <Award size={18} className=\"mr-1\" />,\n        },\n        {\n          title: 'HowTos & Docs',\n          url: 'wikiLinks',\n          icon: <Award size={18} className=\"mr-1\" />,\n        },\n      ],\n    );\n  } else {\n    navbarLinks.push(\n      ...[\n        {\n          title: 'Login',\n          url: 'login',\n          icon: <LogIn size={18} className=\"mr-1\" />,\n        },\n        {\n          title: 'Signup',\n          url: 'signup',\n          icon: <UserPlus size={18} className=\"mr-1\" />,\n        },\n      ],\n    );\n  }\n  if (isAdmin) {\n    navbarLinks.push({\n      title: 'Admin',\n      icon: <Shield size={18} className=\"mr-1\" />,\n      children: [\n        {\n          title: 'Create Tournament',\n          url: 'createTournament',\n          icon: <Calendar size={18} className=\"mr-1\" />,\n        },\n        {\n          title: 'Members',\n          url: 'member',\n          icon: <Users size={18} className=\"mr-1\" />,\n        },\n      ],\n    });\n  }\n  if (isAuthenticated) {\n    const totalDebtOfUser = calculateTotalUserDebt(authenticatedUser);\n\n    navbarLinks.push({\n      title: (\n        <span\n          className={`badge badge-${totalDebtOfUser > 0 ? 'danger' : 'info'}`}\n        >\n          {Intl.NumberFormat('de-DE', {\n            style: 'currency',\n            currency: 'EUR',\n          }).format(totalDebtOfUser)}\n        </span>\n      ),\n      icon: <User size={18} className=\"mr-1\" />,\n      className: 'ml-md-auto align-collapse-right',\n      children: [\n        {\n          title: 'My Tournaments',\n          url: 'home',\n          icon: <List size={18} className=\"mr-1\" />,\n          className: 'ml-auto',\n        },\n        {\n          title: 'Edit Profile',\n          url: 'edit',\n          icon: <Edit size={18} className=\"mr-1\" />,\n        },\n        {\n          title: 'Logout',\n          onClick: () => {\n            dispatch(logout());\n          },\n          icon: <LogOut size={18} className=\"mr-1\" />,\n        },\n      ],\n    });\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"#\">\n        <img src={logo} className=\"mr-1\" width=\"80\" alt=\"logo\" />\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav w-100\">\n          {navbarLinks.map(link =>\n            link.children ? (\n              <NavbarDropdown link={link} pathname={pathname} key={link.title}>\n                {link.children.map(_link => (\n                  <NavbarLink\n                    link={_link}\n                    pathname={pathname}\n                    key={`${_link.url}_${_link.title}`}\n                  />\n                ))}\n              </NavbarDropdown>\n            ) : (\n              <NavbarLink\n                link={link}\n                key={`${link.url}_${link.title}`}\n                pathname={pathname}\n              />\n            ),\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer\n      id=\"footer\"\n      className=\"d-flex justify-content-around align-items-center py-2\"\n    >\n      <span>\n© Berlin Debating Union e.V.,\n        {new Date().getFullYear()}\n      </span>\n      <Link to=\"/bug\">Feedback / Bugs</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.scss';\nimport { useDispatch } from 'react-redux';\nimport { LogIn } from 'react-feather';\n\nimport membersAreaImage from './BDU_memberArea_512.png';\nimport { login } from '../../../actions/AuthActions';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleLogin(e) {\n    e.preventDefault();\n    dispatch(login(email, password));\n  }\n\n  return (\n    <div id=\"loginPage\" className=\"container-fluid d-flex flex-column\">\n      <div className=\"row d-flex align-items-center justify-content-center py-4\">\n        <img id=\"loginMembersAreaImage\" src={membersAreaImage} alt=\"\" />\n      </div>\n      <div className=\"row d-flex align-items-center justify-content-center py-3\">\n        <div className=\"col-lg-4 col-md-5 col-sm-7 col-11 login-box p-4\">\n          <h4>\n            Login <LogIn />\n          </h4>\n          <hr />\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                onChange={e => {\n                  setEmail(e.target.value);\n                }}\n                name=\"email\"\n                autoComplete=\"username email\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter your email\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={password}\n                onChange={e => {\n                  setPassword(e.target.value);\n                }}\n                name=\"password\"\n                autoComplete=\"current-password\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-lg btn-outline-info\">\n              Login\n            </button>\n          </form>\n          <hr />\n          <p>\n            Forgot your password? <Link to=\"/forgot\">Reset Password</Link>\n          </p>\n          <p>\n            Need an account? <Link to=\"/signup\">Signup</Link>\n          </p>\n        </div>\n      </div>\n      <div\n        id=\"photoCredit\"\n        className=\"d-flex justify-content-end flex-wrap mt-auto\"\n      >\n        photo credit:&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.flickr.com/photos/jaehyunlee/\"\n        >\n          Jaehyun Lee\n        </a>\n        ,&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.flickr.com/photos/jaehyunlee/33543411320/\"\n        >\n          ´´Museum Island´´\n        </a>\n        &nbsp;is licensed under&nbsp;\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://creativecommons.org/licenses/by/2.0/\"\n        >\n          {' '}\n          CC BY 2.0\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/* eslint-disable no-return-assign */\nimport React, { useState, useRef } from 'react';\n\nconst UserForm = ({\n  email,\n  firstName,\n  lastName,\n  gender,\n  food,\n  context,\n  handleSubmit,\n}) => {\n  const [userFormState, setUserFormState] = useState({\n    email: email || '',\n    password: '',\n    confirmPassword: '',\n    firstName: firstName || '',\n    lastName: lastName || '',\n    gender: gender || '-',\n    food: food || '',\n    signupPassword: '',\n  });\n  const [passwordsMatch, setPasswordsMatch] = useState(false);\n\n  const confirmPasswordInput = useRef(null);\n\n  function handleChange(e) {\n    if (\n      e.target.name === 'confirmPassword' ||\n      !!(e.target.name === 'password' && userFormState.confirmPassword)\n    ) {\n      setPasswordsMatch(\n        userFormState.password === e.target.value ||\n          userFormState.confirmPassword === e.target.value,\n      );\n    }\n    setUserFormState({ ...userFormState, [e.target.name]: e.target.value });\n  }\n\n  function _handleSubmit(e) {\n    e.preventDefault();\n    if (userFormState.password !== userFormState.confirmPassword) {\n      confirmPasswordInput.focus();\n    } else {\n      handleSubmit(userFormState);\n    }\n  }\n\n  let confirmPasswordClass = 'form-control';\n  if (userFormState.confirmPassword.length > 0) {\n    confirmPasswordClass += passwordsMatch ? ' is-valid' : ' is-invalid';\n  }\n  const isEditContext = context === 'edit';\n  const enableSubmit =\n    (passwordsMatch || isEditContext) &&\n    userFormState.email &&\n    userFormState.firstName &&\n    userFormState.lastName &&\n    (userFormState.signupPassword || isEditContext);\n\n  return (\n    <form onSubmit={_handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={userFormState.email}\n          onChange={handleChange}\n          id=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter your email\"\n          required\n        />\n      </div>\n      {isEditContext ? null : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              value={userFormState.password}\n              onChange={handleChange}\n              id=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={confirmPasswordClass}\n              value={userFormState.confirmPassword}\n              ref={confirmPasswordInput}\n              onChange={handleChange}\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              autoComplete=\"confirmPassword\"\n              placeholder=\"Confirm your password\"\n              required\n            />\n            {!passwordsMatch && userFormState.confirmPassword.length > 0 ? (\n              <small className=\"text-danger\">Passwords don´t match.</small>\n            ) : null}\n          </div>\n        </div>\n      )}\n      <div className=\"form-group\">\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={userFormState.firstName}\n          onChange={handleChange}\n          id=\"firstName\"\n          name=\"firstName\"\n          autoComplete=\"given-name\"\n          placeholder=\"First Name\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={userFormState.lastName}\n          onChange={handleChange}\n          id=\"lastName\"\n          name=\"lastName\"\n          autoComplete=\"family-name\"\n          placeholder=\"Last Name\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"gender\">Gender</label>\n        <select\n          className=\"form-control\"\n          value={userFormState.gender}\n          onChange={handleChange}\n          id=\"gender\"\n          name=\"gender\"\n          required\n        >\n          <option value=\"f\">female</option>\n          <option value=\"m\">male</option>\n          <option value=\"-\">non-binary</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"food\">Food Preference</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"food\"\n          name=\"food\"\n          autoComplete=\"food\"\n          value={userFormState.food}\n          onChange={handleChange}\n          placeholder=\"Veggie? Vegan? Allergies? Don't like tomatoes?\"\n        />\n      </div>\n      {context === 'edit' ? null : (\n        <div className=\"form-group mt-2\">\n          <label htmlFor=\"signupPassword\">Signup Password</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={userFormState.signupPassword}\n            onChange={handleChange}\n            id=\"signupPassword\"\n            name=\"signupPassword\"\n            autoComplete=\"signupPassword\"\n            placeholder=\"Get password from the BDU board members\"\n            required\n          />\n        </div>\n      )}\n      <button\n        type=\"submit\"\n        className=\"btn btn-lg btn-outline-info\"\n        disabled={!enableSubmit}\n        style={{ cursor: enableSubmit ? 'pointer' : 'not-allowed' }}\n      >\n        {context === 'edit' ? 'Submit' : 'Signup'}\n      </button>\n    </form>\n  );\n};\n\nexport default UserForm;\n","/* eslint-disable no-return-assign */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport UserForm from '../UserForm';\nimport { signup } from '../../../../actions/AuthActions';\nimport './Signup.scss';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n\n  function handleSignup(registration) {\n    dispatch(signup(registration));\n  }\n\n  return (\n    <div id=\"signupContainer\" className=\"d-flex\">\n      <div\n        id=\"sideImage\"\n        className=\"col-5 d-none d-md-flex align-items-center justify-content-center\"\n      >\n        <h1 className=\"text-white text-center\">\n          Signup and Register for Tournaments with the BDU\n        </h1>\n      </div>\n      <div className=\"d-flex justify-content-center row w-100 align-items-center m-0\">\n        <div className=\"col-11 col-sm-10 col-md-9 col-lg-8 col-xl-6 p-4\">\n          <UserForm handleSubmit={handleSignup} />\n          <hr />\n          <span>\n            Already have an account? <Link to=\"/login\">Login</Link>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import { alertTypes, BASE_URL } from '../constants/applicationConstants';\nimport triggerAlert from './actionHelpers';\nimport {\n  ADD_REGISTRATION,\n  DELETE_REGISTRATION,\n  PATCH_REGISTRATION,\n} from '../constants/action-types';\n\nexport const register = ({\n  tournament,\n  userId,\n  role,\n  comment,\n  independent,\n  funding,\n  partner1,\n  partner2,\n  teamName,\n}) => async (dispatch, getState) => {\n  const response = await fetch(`${BASE_URL}/registration`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'POST',\n    },\n    body: JSON.stringify({\n      tournament_id: tournament.id,\n      user_id: userId,\n      role,\n      comment,\n      is_independent: independent,\n      funding,\n      partner1,\n      partner2,\n      teamname: teamName,\n    }),\n  });\n  const body = await response.json();\n  if (response.status === 200) {\n    dispatch({\n      type: ADD_REGISTRATION,\n      payload: {\n        registration: Object.keys(body.registration).reduce(\n          (newFields, key) => ({\n            ...newFields,\n            [`_pivot_${key}`]: body.registration[key],\n          }),\n          {},\n        ),\n        user: getState().user.users.find(({ id }) => id === body.registration.user_id),\n        tournament: getState().tournament.tournamentList.find(\n          ({ id }) => id === body.registration.tournament_id,\n        ),\n      },\n    });\n    triggerAlert(body.message, alertTypes.SUCCESS);\n  } else triggerAlert(body.message, alertTypes.WARNING);\n};\n\nexport const deleteRegistration = registrationId => async dispatch => {\n  const response = await fetch(`${BASE_URL}/registration/${registrationId}`, {\n    method: 'DELETE',\n    credentials: 'include',\n  });\n  const body = await response.json();\n  if (response.status === 200) {\n    triggerAlert(body.message, alertTypes.SUCCESS);\n    dispatch({\n      type: DELETE_REGISTRATION,\n      payload: {\n        registrationId,\n      },\n    });\n  } else triggerAlert(body.message, alertTypes.WARNING);\n};\n\nexport const patchRegistration = (registrationId, patchedRegistration) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/registration/${registrationId}`, {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'POST',\n    },\n    body: JSON.stringify(patchedRegistration),\n  });\n  const body = await response.json();\n  if (response.status === 200) {\n    triggerAlert(body.message, alertTypes.SUCCESS);\n    dispatch({\n      type: PATCH_REGISTRATION,\n      payload: {\n        registrationId,\n        registration: Object.keys(body.registration).reduce(\n          (newFields, key) => ({\n            ...newFields,\n            [`_pivot_${key}`]: body.registration[key],\n          }),\n          {},\n        ),\n      },\n    });\n  } else triggerAlert(body.message, alertTypes.WARNING);\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport moment from 'moment/moment';\nimport { confirmAlert } from 'react-confirm-alert';\nimport Currency from 'react-currency-formatter';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { useDispatch } from 'react-redux';\nimport { Trash2 } from 'react-feather';\n\nimport {\n  attendanceStatuses,\n  DATE_FORMAT,\n} from '../../../constants/applicationConstants';\nimport { deleteRegistration } from '../../../actions/RegistrationActions';\n\nconst UserTournamentList = ({ tournaments, history }) => {\n  const actionRefs = React.createRef();\n  const dispatch = useDispatch();\n\n  const _deleteRegistration = registrationId => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete this registration?',\n      buttons: [\n        {\n          label: 'Yes',\n          class: 'btn btn-success',\n          onClick: () => dispatch(deleteRegistration(registrationId)),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const tournamentTableColumns = [\n    {\n      dataField: 'id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'name',\n      text: 'Name',\n      sort: true,\n      style: { wordBreak: 'break-word' },\n    },\n    {\n      dataField: 'startDate',\n      text: 'Date',\n      isDummyField: true,\n      sort: true,\n      formatter: (cellContent, row) => (\n        <span>\n          {moment(row.startDate).format(DATE_FORMAT)}\n          <br />\n          {moment(row.endDate).format(DATE_FORMAT)}\n        </span>\n      ),\n    },\n    {\n      dataField: '_pivot_role',\n      text: 'Role',\n      classes: 'd-none d-md-table-cell',\n      headerClasses: 'd-none d-md-table-cell',\n      sort: true,\n    },\n    {\n      dataField: '_pivot_price_paid',\n      text: 'Debt',\n      isDummyField: true,\n      sort: true,\n      formatter: (cellContent, row) => (\n        <span\n          className={\n            row._pivot_price_owed - row._pivot_price_paid > 0\n              ? 'text-danger'\n              : null\n          }\n        >\n          <Currency\n            quantity={row._pivot_price_owed - row._pivot_price_paid || 0}\n            currency=\"EUR\"\n          />\n        </span>\n      ),\n    },\n    {\n      dataField: '_pivot_attended',\n      text: 'Status',\n      sort: true,\n      classes: 'd-none d-lg-table-cell',\n      headerClasses: 'd-none d-lg-table-cell',\n      formatter: cellContent => {\n        const status = Object.keys(attendanceStatuses).find(\n          statusName => attendanceStatuses[statusName] === cellContent,\n        );\n        return status || '';\n      },\n    },\n    {\n      dataField: '_pivot_points',\n      text: 'Success',\n      sort: true,\n      classes: 'd-none d-lg-table-cell',\n      headerClasses: 'd-none d-lg-table-cell',\n    },\n    {\n      dataField: 'actions',\n      text: '',\n      isDummyField: true,\n      formatter: (cellContent, row) => (\n        <div\n          ref={actionRefs}\n          className=\"d-flex flex-wrap justify-content-center align-items-center\"\n        >\n          <Trash2\n            className=\"text-danger m-1 cursorPointer\"\n            role=\"button\"\n            onClick={e => {\n              _deleteRegistration(row._pivot_id);\n              e.stopPropagation();\n            }}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <BootstrapTable\n      bootstrap4\n      hover\n      keyField=\"id\"\n      data={tournaments}\n      columns={tournamentTableColumns}\n      defaultSorted={[\n        {\n          dataField: 'startDate',\n          order: 'desc',\n        },\n      ]}\n      rowEvents={{\n        onClick: (e, { _pivot_id }) => {\n          history.push(`registration/${_pivot_id}`);\n        },\n      }}\n      rowClasses=\"cursorPointer\"\n      bordered={false}\n    />\n  );\n};\n\nexport default UserTournamentList;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = ({ xl }) => {\n  return (\n    <div className={`${xl ? 'xl ' : ''}spinner d-flex justify-content-around`}>\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { User, DollarSign, LogOut, Copy } from 'react-feather';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nimport './Home.scss';\nimport UserTournamentList from './UserTournamentList';\nimport { logout } from '../../../actions/AuthActions';\nimport Spinner from '../../Spinner/Spinner';\nimport { copyStringToClipboard } from '../../../helpers';\n\nconst TransactionPurposeModal = ({\n  isOpen,\n  transactionPurpose = 'You have no current debt to the BDU.',\n  isLoading = false,\n  closeModal,\n}) => (\n  <Modal isOpen={isOpen} className=\"transaction-purpose-modal\">\n    <h5 className=\"mb-3\">Your transaction purpose</h5>\n    {isLoading && <Spinner />}\n    {!isLoading && (\n      <>\n        <p>\n          <b>{transactionPurpose}</b>\n          <Copy\n            className=\"cursorPointer ml-2\"\n            onClick={() => {\n              copyStringToClipboard(transactionPurpose);\n            }}\n          />\n        </p>\n        <button\n          className=\"btn btn-outline-info float-right\"\n          type=\"button\"\n          onClick={closeModal}\n        >\n          Close\n        </button>\n      </>\n    )}\n  </Modal>\n);\n\nconst Home = ({ history }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [transactionPurpose, setTransactionPurpose] = useState(undefined);\n  const [\n    isLoadingTransactionPurpose,\n    setIsLoadingTransactionPurpose,\n  ] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(state =>\n    state.user.users.find(({ id }) => state.user.authenticatedUserId === id),\n  );\n  const tournaments = user.tournaments || [];\n\n  async function fetchTransactionPurpose() {\n    setIsLoadingTransactionPurpose(true);\n    setModalIsOpen(true);\n    const response = await fetch(\n      `https://kouqz3b0rd.execute-api.us-east-1.amazonaws.com/prod/gettransactionpurpose?userId=${user.id}`,\n    );\n    if (response.status === 200) {\n      const tp = await response.json();\n      setTransactionPurpose(tp);\n    }\n    setIsLoadingTransactionPurpose(false);\n  }\n\n  return (\n    <div id=\"home\" className=\"container-fluid\">\n      <div className=\"side-bar\">\n        <div className=\"page-content d-flex align-items-center\">\n          <div className=\"name-circle\">\n            {user.firstName.substring(0, 1)}\n            {user.lastName.substring(0, 1)}\n          </div>\n          <span className=\"d-flex flex-column welcome-message\">\n            <span>Hi,</span>\n            <b>\n              {user.firstName} {user.lastName}\n            </b>\n          </span>\n        </div>\n        <div className=\"d-flex align-items-center page-content\">\n          <Link to=\"edit\">\n            <User className=\"mr-3\" />\n            <span>Edit profile</span>\n          </Link>\n        </div>\n        <div className=\"d-flex align-items-center page-content\">\n          <a\n            className=\"d-flex align-items-center\"\n            role=\"button\"\n            onClick={fetchTransactionPurpose}\n          >\n            <DollarSign className=\"mr-3\" />\n            <span>Get transaction purpose</span>\n          </a>\n        </div>\n        <div className=\"d-flex align-items-center page-content mt-4\">\n          <a\n            className=\"d-flex align-items-center\"\n            role=\"button\"\n            onClick={() => {\n              dispatch(logout());\n            }}\n          >\n            <LogOut className=\"mr-3\" />\n            <span>Logout</span>\n          </a>\n        </div>\n        <div className=\"d-flex align-items-center page-content mt-4\">\n          <a\n            role=\"button\"\n            onClick={() => {\n              dispatch(logout());\n            }}\n          >\n            <i className=\"fas fa-sign-out-alt mr-3\" />\n            <span>Logout</span>\n          </a>\n        </div>\n      </div>\n      <div className=\"page-content\">\n        <h1 className=\"py-3\"> My Tournaments</h1>\n        {tournaments.length ? (\n          <UserTournamentList tournaments={tournaments} history={history} />\n        ) : (\n          <h4>Your registered tournaments will be listed here.</h4>\n        )}\n      </div>\n      <div className=\"page-content\">\n        <h2 className=\"py-3\"> My Tournaments</h2>\n        {tournaments.length ? (\n          <UserTournamentList tournaments={tournaments} history={history} />\n        ) : (\n          <h4>Your registered tournaments will be listed here.</h4>\n        )}\n      </div>\n      <TransactionPurposeModal\n        isOpen={modalIsOpen}\n        transactionPurpose={transactionPurpose}\n        isLoading={isLoadingTransactionPurpose}\n        closeModal={() => {\n          setModalIsOpen(false);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserForm from '../UserForm';\nimport { updateUser } from '../../../../actions/UserActions';\n\nconst Profile = () => {\n  const { id, email, firstName, lastName, gender, food } = useSelector(\n    ({ user }) =>\n      user.users.find(({ id: _id }) => user.authenticatedUserId === _id),\n  );\n\n  const dispatch = useDispatch();\n  const handleUserUpdate = ({\n    email: _email,\n    firstName: _firstName,\n    lastName: _lastName,\n    _gender,\n    _food,\n  }) => {\n    dispatch(\n      updateUser({\n        userId: id,\n        email: _email,\n        firstName: _firstName,\n        lastName: _lastName,\n        gender: _gender,\n        food: _food,\n      }),\n    );\n  };\n\n  return (\n    <div className=\"container-fluid page-content px-5\">\n      <h2>Edit your profile information</h2>\n      <UserForm\n        context=\"edit\"\n        handleSubmit={handleUserUpdate}\n        email={email}\n        firstName={firstName}\n        lastName={lastName}\n        gender={gender}\n        food={food}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","import { UPDATE_USER } from '../constants/action-types';\nimport { alertTypes, BASE_URL } from '../constants/applicationConstants';\nimport triggerAlert from './actionHelpers';\n\nexport const updateUser = ({\n  userId,\n  email,\n  firstName,\n  lastName,\n  gender,\n  food,\n  newTournamentCount,\n}) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/user/${userId}`, {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'PUT',\n    },\n    body: JSON.stringify({\n      email,\n      vorname: firstName,\n      name: lastName,\n      gender,\n      food,\n      new_tournament_count: newTournamentCount,\n    }),\n  });\n  const { user, message } = await response.json();\n  if (response.status === 200) {\n    triggerAlert(message, alertTypes.SUCCESS);\n    dispatch({\n      type: UPDATE_USER,\n      payload: {\n        user,\n      },\n    });\n  } else if (message) triggerAlert(message, alertTypes.WARNING);\n  else triggerAlert('Error during signup.', alertTypes.WARNING);\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react';\nimport { X } from 'react-feather';\n\nimport './FlexTable.scss';\n\nclass FlexTable extends Component {\n  handleToggleCollapse(rowIndex) {\n    const { tableName } = this.props;\n    const openCollapse = window.$('.collapse.show');\n    const wantedCollapse = window.$(`#rowCollapse_${rowIndex}`);\n    const wantedTableRow = window.$(`#BodyRow_${tableName}_${rowIndex}`);\n    let heightOfOpenCollapse = 0;\n    if (\n      openCollapse.length &&\n      openCollapse.offset().top < wantedTableRow.offset().top\n    ) {\n      heightOfOpenCollapse = openCollapse.height();\n    }\n    openCollapse.collapse('hide');\n    wantedCollapse.collapse('toggle');\n    window\n      .$('html, body')\n      .stop()\n      .animate(\n        {\n          scrollTop: wantedTableRow.offset().top - heightOfOpenCollapse,\n        },\n        700,\n      );\n  }\n\n  render() {\n    const {\n      tableName,\n      headColumns,\n      bodyRows,\n      striped,\n      hover,\n      collapse,\n      sortColumn,\n      actionOnRowClick,\n    } = this.props;\n    this.handleToggleCollapse = this.handleToggleCollapse.bind(this);\n    let tableClass = '';\n    if (striped) tableClass += ' flex-table-striped';\n    if (hover) tableClass += ' flex-table-hover';\n    if (!headColumns) tableClass += ' flex-table-columnHead';\n    if (actionOnRowClick) tableClass += ' cursorPointer';\n    return (\n      <div key={tableName} className=\"flex-table\">\n        {headColumns ? (\n          <div className=\"flex-table-row flex-table-head\">\n            {headColumns.map((headColumn, headerIndex) => (\n              <div key={headColumn} className=\"flex-table-cell\">\n                <div>\n                  {sortColumn ? (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-info\"\n                      onClick={() => {\n                        sortColumn(headerIndex);\n                      }}\n                    >\n                      {headColumn}\n                    </button>\n                  ) : (\n                    headColumn\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : null}\n\n        {bodyRows.map((bodyRow, rowIndex) => (\n          <div\n            role=\"button\"\n            key={`BodyRow_${rowIndex}`}\n            id={`BodyRow_${tableName}_${rowIndex}`}\n            onClick={\n              actionOnRowClick\n                ? () => {\n                    actionOnRowClick(rowIndex);\n                  }\n                : null\n            }\n            className={tableClass}\n          >\n            <div\n              role=\"row\"\n              className={\n                collapse ? 'flex-table-row cursorPointer' : 'flex-table-row'\n              }\n              onClick={\n                collapse\n                  ? () => {\n                      this.handleToggleCollapse(rowIndex);\n                    }\n                  : null\n              }\n            >\n              {bodyRow.map((column, columnIndex) => (\n                <div\n                  key={`BodyColumn_${columnIndex}`}\n                  className=\"flex-table-cell\"\n                >\n                  {column}\n                </div>\n              ))}\n            </div>\n            {collapse ? (\n              <div id={`rowCollapse_${rowIndex}`} className=\"collapse\">\n                <div className=\"w-100 position-relative\">\n                  <X\n                    role=\"button\"\n                    onClick={() => {\n                      this.handleToggleCollapse(rowIndex);\n                    }}\n                  />\n                  {collapse[rowIndex]}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FlexTable;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport { register } from '../../../../../actions/RegistrationActions';\n\nconst mapStateToProps = ({ user }) => ({\n  user: user.users.find(({ id }) => user.authenticatedUserId === id),\n});\nconst mapDispatchToProps = { register };\n\nclass RegistrationModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      role: 'judge',\n      partner1: '-',\n      partner2: '-',\n      teamName: '',\n      comment: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePostRegister = this.handlePostRegister.bind(this);\n  }\n\n  handleChange(e) {\n    const change = {};\n    change[e.target.name] = e.target.value;\n    this.setState(change);\n  }\n\n  handlePostRegister(e) {\n    e.preventDefault();\n    const { tournament, user, register: _register } = this.props;\n    $(`#registrationModal_${tournament.id}`).modal('hide');\n    const { role, partner1, partner2, teamName, comment } = this.state;\n    const userId = user.id;\n    _register({\n      tournament,\n      userId,\n      role,\n      comment,\n      independent: 0,\n      funding: 0,\n      partner1,\n      partner2,\n      teamName,\n    });\n  }\n\n  render() {\n    const { role, partner1, partner2, teamName, comment } = this.state;\n    const { tournament, users } = this.props;\n    return (\n      <div\n        className=\"modal fade text-body\"\n        id={`registrationModal_${tournament.id}`}\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <form onSubmit={this.handlePostRegister}>\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">\n                  Register for {tournament.name}\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"roleSelect\">Register as</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"roleSelect\"\n                    name=\"role\"\n                    value={role}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"judge\">Judge</option>\n                    <option value=\"speaker\">Speaker</option>\n                  </select>\n                </div>\n                {role === 'speaker' ? (\n                  <div className=\"form-group d-flex flex-column\">\n                    <label htmlFor=\"partner1Select\">Teammate</label>\n                    <select\n                      className=\"form-control\"\n                      id=\"partner1Select\"\n                      name=\"partner1\"\n                      value={partner1}\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"-\">None</option>\n                      {users.map(user => (\n                        <option key={`partner1List_${user.id}`} value={user.id}>\n                          {`${user.firstName} ${user.lastName}`}\n                        </option>\n                      ))}\n                    </select>\n                    <small>Don´t have a team partner yet? No problem.</small>\n                  </div>\n                ) : null}\n                {role === 'speaker' &&\n                partner1 &&\n                partner1 !== '-' &&\n                !['BPS', 'BP'].includes(tournament.format) ? (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"partner2Select\">Teammate 2</label>\n                    <select\n                      className=\"form-control\"\n                      id=\"partner2Select\"\n                      name=\"partner2\"\n                      value={partner2}\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"-\">None</option>\n                      {users.map(user => (\n                        <option\n                          key={`partner1List_${user.id}`}\n                          value={user.id}\n                          disabled={user.id === parseInt(partner1, 10)}\n                        >\n                          {`${user.firstName} ${user.lastName}`}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                ) : null}\n                {role === 'speaker' ? (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"teamName\">Team Name</label>\n                    <input\n                      className=\"form-control\"\n                      id=\"teamName\"\n                      name=\"teamName\"\n                      placeholder=\"Be funny, creative, critical, ...\"\n                      value={teamName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                ) : null}\n                <div className=\"form-group\">\n                  <label htmlFor=\"comment\">Comment</label>\n                  <input\n                    className=\"form-control\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    placeholder=\"Anything you want us to know?\"\n                    value={comment}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n                <button type=\"submit\" className=\"btn btn-success\">\n                  Register\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RegistrationModal);\n","import {\n  GET_TOURNAMENT,\n  DELETE_TOURNAMENT,\n  ADD_TOURNAMENT,\n  UPDATE_TOURNAMENT,\n} from '../constants/action-types';\nimport { alertTypes, BASE_URL } from '../constants/applicationConstants';\nimport triggerAlert from './actionHelpers';\n\nexport const getTournament = tournamentId => async dispatch => {\n  // Todo: is this fucntion ever used?\n  const response = await fetch(`${BASE_URL}/tournament/${tournamentId}`, {\n    method: 'GET',\n    credentials: 'include',\n  });\n  if (response.status === 200) {\n    const tournament = response.json();\n    dispatch({\n      type: GET_TOURNAMENT,\n      payload: {\n        tournament: {\n          ...tournament,\n          location: tournament.ort,\n          startDate: tournament.startdate,\n          endDate: tournament.enddate,\n          speakerPrice: tournament.speakerprice,\n          judgePrice: tournament.judgeprice,\n          teamSpots: tournament.teamspots,\n          judgeSpots: tournament.judgespots,\n          rankingFactor: tournament.rankingvalue,\n          comment: tournament.comments,\n        },\n      },\n    });\n  }\n};\n\nexport const createTournament = ({\n  location,\n  startDate,\n  endDate,\n  rankingFactor,\n  speakerPrice,\n  judgePrice,\n  teamSpots,\n  judgeSpots,\n  comment,\n  ...restTournament\n}) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/tournament`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'POST',\n    },\n    body: JSON.stringify({\n      ...restTournament,\n      ort: location,\n      startdate: startDate,\n      enddate: endDate,\n      speakerprice: speakerPrice,\n      judgeprice: judgePrice,\n      teamspots: teamSpots,\n      judgespots: judgeSpots,\n      rankingvalue: rankingFactor,\n      comments: comment,\n    }),\n  });\n  const { message, tournament } = await response.json();\n  if (response.status === 200) {\n    triggerAlert(message, alertTypes.SUCCESS);\n    dispatch({\n      type: ADD_TOURNAMENT,\n      payload: {\n        tournament: { ...tournament, users: [] },\n      },\n    });\n  } else triggerAlert(message, alertTypes.WARNING);\n};\n\nexport const updateTournament = (\n  tournamentId,\n  {\n    location,\n    startDate,\n    endDate,\n    rankingFactor,\n    speakerPrice,\n    judgePrice,\n    teamSpots,\n    judgeSpots,\n    comment,\n    ...restTournament\n  },\n) => async dispatch => {\n  const response = await fetch(`${BASE_URL}/tournament/${tournamentId}`, {\n    method: 'PUT',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Request-Method': 'PUT',\n    },\n    body: JSON.stringify({\n      ...restTournament,\n      ort: location,\n      startdate: startDate,\n      enddate: endDate,\n      speakerprice: speakerPrice,\n      judgeprice: judgePrice,\n      teamspots: teamSpots,\n      judgespots: judgeSpots,\n      rankingvalue: rankingFactor,\n      comments: comment,\n    }),\n  });\n  const { message, tournament } = await response.json();\n  if (response.status === 200) {\n    dispatch({\n      type: UPDATE_TOURNAMENT,\n      payload: { tournament },\n    });\n    triggerAlert(message, alertTypes.SUCCESS);\n  } else triggerAlert(message, alertTypes.WARNING);\n};\n\nexport const deleteTournament = tournamentId => async dispatch => {\n  const response = await fetch(`${BASE_URL}/tournament/${tournamentId}`, {\n    method: 'DELETE',\n    credentials: 'include',\n  });\n  const body = await response.json();\n  if (response.status === 200) {\n    triggerAlert(body.message, alertTypes.SUCCESS);\n    dispatch({\n      type: DELETE_TOURNAMENT,\n      payload: { tournamentId },\n    });\n  } else triggerAlert(body.message, alertTypes.WARNING);\n};\n","import React from 'react';\nimport Currency from 'react-currency-formatter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment/moment';\nimport $ from 'jquery';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { Facebook, Link, Calendar } from 'react-feather';\n\nimport FlexTable from '../../../FlexTable/FlexTable';\nimport RegistrationModal from './RegistrationModal/RegistrationModal';\nimport {\n  DATE_FORMAT,\n  DATE_TIME_FORMAT,\n} from '../../../../constants/applicationConstants';\nimport { deleteTournament } from '../../../../actions/TournamentActions';\n\nconst handleClickRegister = tournamentId => {\n  $(`#registrationModal_${tournamentId}`).modal('toggle');\n};\n\nconst TournamentRowCollapse = ({ tournament, history }) => {\n  const { isAdmin, users } = useSelector(({ user }) => ({\n    isAdmin: user.authenticatedUserId\n      ? user.users.find(({ id }) => user.authenticatedUserId === id)\n          .position === 1\n      : false,\n    users: user.users,\n  }));\n  const dispatch = useDispatch();\n\n  const forwardToEditTournament = tournamentId => {\n    history.push(`/tournament/${tournamentId}`);\n  };\n\n  const forwardToRegistration = tournament.users.length\n    ? rowIndex => {\n        const registrationId = tournament.users[rowIndex]._pivot_id;\n        history.push(`/registration/${registrationId}`);\n      }\n    : null;\n\n  const handleDeleteClick = tournamentId => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete this tournament?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => dispatch(deleteTournament(tournamentId)),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const startDate = moment(tournament.startDate).format(DATE_FORMAT);\n  const endDate = moment(tournament.endDate).format(DATE_FORMAT);\n  let { link } = tournament;\n  if (\n    tournament.link.includes('http://') ||\n    tournament.link.includes('https://')\n  ) {\n    const isFaceBookLink = tournament.link.includes('facebook');\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    const linkLabel = isFaceBookLink ? <Facebook /> : <Link />;\n    link = (\n      <a\n        className=\"text-white\"\n        href={tournament.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {linkLabel}\n      </a>\n    );\n  }\n  const tournamentTableRows = [\n    tournament.location ? ['Location', tournament.location] : null,\n    tournament.startDate ? ['Date', `${startDate} - ${endDate}`] : null,\n    tournament.format ? ['Format', tournament.format] : null,\n    tournament.teamspots ? ['Team Spots', tournament.teamspots] : null,\n    tournament.judgespots ? ['Judge Spots', tournament.judgespots] : null,\n    tournament.speakerprice\n      ? [\n          'Price Speaker',\n          <Currency\n            quantity={tournament.speakerprice || 0}\n            currency=\"EUR\"\n            key={tournament.speakerprice}\n          />,\n        ]\n      : null,\n    tournament.judgeprice\n      ? [\n          'Price Judge',\n          <Currency\n            quantity={tournament.judgeprice || 0}\n            currency=\"EUR\"\n            key={tournament.judgeprice}\n          />,\n        ]\n      : null,\n    tournament.deadline\n      ? [\n          'Deadline to register',\n          moment(tournament.deadline).format(DATE_FORMAT),\n        ]\n      : null,\n    tournament.accommodation\n      ? ['Accommodation', tournament.accommodation]\n      : null,\n    tournament.rankingvalue\n      ? ['BDU ranking factor:', tournament.rankingvalue]\n      : null,\n    tournament.league ? ['League', tournament.league] : null,\n    tournament.link ? ['Link', link] : null,\n    tournament.comment ? ['Comments', tournament.comment] : null,\n  ].filter(row => row);\n\n  const userTableRows = tournament.users.length\n    ? tournament.users\n        .map(user => {\n          return [\n            `${user.firstName} ${user.lastName}`,\n            user._pivot_role,\n            user._pivot_teamname,\n            user._pivot_comment,\n            moment(user._pivot_created_at).format(DATE_TIME_FORMAT),\n          ];\n        })\n        .sort(([, , , , , a], [, , , , , b]) => {\n          if (a === b) return 0;\n          return moment(a, DATE_TIME_FORMAT).isAfter(\n            moment(b, DATE_TIME_FORMAT),\n          )\n            ? 1\n            : -1;\n        })\n    : null;\n\n  return (\n    <div id={tournament.id} className=\"collapseContainer\">\n      <div className=\"collapseTournamentContainer\">\n        <h3 className=\"pr-4 pr-sm-0\">{tournament.name}</h3>\n        {isAdmin ? (\n          <div className=\"d-flex mb-1\">\n            <button\n              onClick={() => {\n                forwardToEditTournament(tournament.id);\n              }}\n              type=\"button\"\n              className=\"btn btn-outline-light\"\n            >\n              Edit\n            </button>\n            <button\n              onClick={() => {\n                handleDeleteClick(tournament.id);\n              }}\n              type=\"button\"\n              className=\"btn btn-outline-danger ml-2\"\n            >\n              Delete\n            </button>\n          </div>\n        ) : null}\n        <FlexTable\n          key={`tournamentTable_${tournament.name}`}\n          tableName={`tournamentTable_${tournament.name}`}\n          bodyRows={tournamentTableRows}\n          striped\n        />\n        <div className=\"d-flex mt-4\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-light btn-lg\"\n            data-toggle=\"tooltip\"\n            title=\"Add to calendar\"\n          >\n            <Calendar />\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger btn-lg ml-auto registerButton\"\n            onClick={() => {\n              handleClickRegister(tournament.id);\n            }}\n          >\n            Register\n          </button>\n        </div>\n      </div>\n      <div className=\"collapseUserContainer\">\n        <div className=\"d-flex\">\n          <h3>Registered Users</h3>\n        </div>\n        {tournament.users.length ? (\n          <FlexTable\n            key={`userTable_${tournament.name}`}\n            tableName={`userTable_${tournament.name}`}\n            headColumns={['Name', 'Role', 'Team', 'Comment', 'Registered at']}\n            actionOnRowClick={forwardToRegistration}\n            bodyRows={userTableRows}\n            striped\n          />\n        ) : (\n          <p>There are no registrations for this tournament yet.</p>\n        )}\n      </div>\n      <RegistrationModal tournament={tournament} users={users} />\n    </div>\n  );\n};\n\nexport default TournamentRowCollapse;\n","import React, { useCallback } from 'react';\nimport moment from 'moment';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './TournamentList.scss';\nimport { DATE_FORMAT } from '../../../../constants/applicationConstants';\nimport TournamentRowCollapse from './TournamentRowCollapse';\nimport {\n  SET_EXPANDED_TOURNAMENT_ID,\n  TOGGLE_SHOW_PREV_TOURNAMENTS,\n} from '../../../../constants/action-types';\n\nconst tableColumns = [\n  {\n    dataField: 'id',\n    text: 'ID',\n    hidden: true,\n  },\n  {\n    dataField: 'name',\n    text: 'Name',\n    sort: true,\n    style: { wordBreak: 'break-word' },\n  },\n  {\n    dataField: 'startDate',\n    isDummyField: true,\n    text: 'Date',\n    sort: true,\n    sortFunc: (a, b, order) => {\n      if (order === 'asc') {\n        return moment(a).isAfter(moment(b))\n          ? 1\n          : moment(a).isBefore(moment(b))\n          ? -1\n          : 0;\n      }\n      return moment(a).isAfter(moment(b))\n        ? -1\n        : moment(a).isBefore(moment(b))\n        ? 1\n        : 0;\n    },\n    formatter: (cellContent, row) =>\n      `${moment(row.startDate).format(DATE_FORMAT)} - ${moment(\n        row.endDate,\n      ).format(DATE_FORMAT)}`,\n  },\n  {\n    dataField: 'location',\n    text: 'Location',\n    sort: true,\n    style: { wordBreak: 'break-word' },\n  },\n  {\n    dataField: 'language',\n    text: 'Language',\n    sort: true,\n    classes: 'd-none d-lg-table-cell',\n    headerClasses: 'd-none d-lg-table-cell',\n    formatter: (cellContent, row) => row.language.toUpperCase(),\n  },\n  {\n    dataField: 'users',\n    text: 'Users',\n    sort: true,\n    sortFunc: (a, b, order) =>\n      order === 'asc' ? a.length - b.length : b.length - a.length,\n    classes: 'd-none d-lg-table-cell',\n    headerClasses: 'd-none d-lg-table-cell',\n    formatter: cellContent => cellContent.length,\n  },\n];\n\nconst TournamentList = ({ history }) => {\n  const { expandedTournamentId, tournaments } = useSelector(\n    ({\n      tournament: {\n        tournamentList,\n        showPreviousTournaments,\n        expandedTournamentId: tId,\n      },\n    }) => ({\n      tournaments: showPreviousTournaments\n        ? tournamentList\n        : tournamentList.filter(({ endDate }) =>\n            moment(endDate).isAfter(moment()),\n          ),\n      expandedTournamentId: tId,\n    }),\n  );\n\n  const dispatch = useDispatch();\n  const handleToggle = useCallback(\n    () => dispatch({ type: TOGGLE_SHOW_PREV_TOURNAMENTS }),\n    [dispatch],\n  );\n  const setExpandedTournamentId = tournamentId =>\n    dispatch({ type: SET_EXPANDED_TOURNAMENT_ID, payload: { tournamentId } });\n\n  const expandRow = {\n    renderer: row =>\n      expandedTournamentId ? (\n        <TournamentRowCollapse tournament={row} history={history} />\n      ) : null,\n    onlyOneExpanding: true,\n    onExpand: (row, isExpand, rowIndex, e) => {\n      setExpandedTournamentId(isExpand ? row.id : null);\n      if (isExpand) {\n        const el = e.target;\n        if (!el) return;\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }, 1);\n      }\n    },\n    expanded: [expandedTournamentId],\n  };\n\n  return (\n    <div className=\"container-fluid page-content\">\n      <h2 className=\"mb-4\">BDU Tournaments</h2>\n      <BootstrapTable\n        bootstrap4\n        hover\n        keyField=\"id\"\n        data={tournaments}\n        columns={tableColumns}\n        defaultSorted={[\n          {\n            dataField: 'startDate',\n            order: 'desc',\n          },\n        ]}\n        rowClasses=\"cursorPointer\"\n        expandRow={expandRow}\n        bordered={false}\n      />\n      <div className=\"d-flex align-items-center flex-column flex-sm-row mt-4\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info\"\n          onClick={handleToggle}\n        >\n          {tournaments.find(({ endDate }) => moment(endDate).isBefore(moment()))\n            ? 'Hide '\n            : 'Show '}\n          previous tournaments\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TournamentList;\n","import React, { useState } from 'react';\nimport './TournamentForm.scss';\n\nconst TournamentForm = ({ handleSubmit, ...formProps }) => {\n  const date = new Date().toISOString().substr(0, 10);\n  const initialFormValues = {\n    name: formProps.name || '',\n    location: formProps.location || '',\n    accommodation: formProps.accommodation || '',\n    startDate: formProps.startDate || date,\n    endDate: formProps.endDate || date,\n    deadline: formProps.deadline || date,\n    format: formProps.format || '',\n    language: formProps.language || '',\n    league: formProps.league || '',\n    rankingFactor: formProps.rankingFactor || 0,\n    speakerPrice: formProps.speakerPrice || 0,\n    judgePrice: formProps.judgePrice || 0,\n    teamSpots: formProps.teamSpots || 0,\n    judgeSpots: formProps.judgeSpots || 0,\n    link: formProps.link || '',\n    comment: formProps.comment || '',\n  };\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n\n  function handleChange(e) {\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\n  }\n\n  const disableSubmit =\n    formValues.name &&\n    formValues.startDate &&\n    formValues.endDate &&\n    formValues.rankingFactor;\n\n  return (\n    <form\n      onSubmit={() => {\n        handleSubmit(formValues);\n      }}\n      id=\"tournamentForm\"\n    >\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 d-flex flex-wrap\">\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Name\n              <input\n                type=\"name\"\n                className=\"form-control\"\n                value={formValues.name}\n                onChange={handleChange}\n                id=\"email\"\n                name=\"name\"\n                autoComplete=\"name\"\n                placeholder=\"Name\"\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Location\n              <input\n                type=\"location\"\n                className=\"form-control\"\n                value={formValues.location}\n                onChange={handleChange}\n                id=\"location\"\n                name=\"location\"\n                autoComplete=\"location\"\n                placeholder=\"Location\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Start Date\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={formValues.startDate}\n                onChange={handleChange}\n                id=\"startDate\"\n                name=\"startDate\"\n                autoComplete=\"startDate\"\n                placeholder=\"Start Date\"\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              End Date\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={formValues.endDate}\n                onChange={handleChange}\n                id=\"endDate\"\n                name=\"endDate\"\n                autoComplete=\"endDate\"\n                placeholder=\"End Date\"\n                required\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Deadline\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={formValues.deadline}\n                onChange={handleChange}\n                id=\"deadline\"\n                name=\"deadline\"\n                autoComplete=\"deadline\"\n                placeholder=\"Dealine\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Format\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={formValues.format}\n                onChange={handleChange}\n                id=\"format\"\n                name=\"format\"\n                autoComplete=\"format\"\n                placeholder=\"Format\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Language\n              <select\n                className=\"form-control\"\n                value={formValues.language}\n                onChange={handleChange}\n                id=\"language\"\n                name=\"language\"\n              >\n                <option value=\"formValues.de\">German</option>\n                <option value=\"formValues.en\">English</option>\n                <option value=\"formValues.-\">other</option>\n              </select>\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              BDU Ranking Factor\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={formValues.rankingFactor}\n                onChange={handleChange}\n                id=\"rankingFactor\"\n                name=\"rankingFactor\"\n                autoComplete=\"rankingFactor\"\n                placeholder=\"BDU Ranking Factor\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Accommodation\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"accommodation\"\n                name=\"accommodation\"\n                autoComplete=\"accommodation\"\n                value={formValues.accommodation}\n                onChange={handleChange}\n                placeholder=\"Accommodation\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              League\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={formValues.league}\n                onChange={handleChange}\n                id=\"league\"\n                name=\"league\"\n                autoComplete=\"league\"\n                placeholder=\"League\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Price for Speakers in €\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={formValues.speakerPrice}\n                onChange={handleChange}\n                id=\"speakerPrice\"\n                name=\"speakerPrice\"\n                autoComplete=\"speakerPrice\"\n                placeholder=\"Price for Speakers\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Price for Judges in €\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={formValues.judgePrice}\n                onChange={handleChange}\n                id=\"judgePrice\"\n                name=\"judgePrice\"\n                autoComplete=\"judgePrice\"\n                placeholder=\"Price for Judges\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Team Spots\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={formValues.teamSpots}\n                onChange={handleChange}\n                id=\"teamSpots\"\n                name=\"teamSpots\"\n                autoComplete=\"teamSpots\"\n                placeholder=\"Team Spots\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Judges Spots\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={formValues.judgeSpots}\n                onChange={handleChange}\n                id=\"judgeSpots\"\n                name=\"judgeSpots\"\n                autoComplete=\"judgeSpots\"\n                placeholder=\"Judges Spots\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Link\n              <input\n                type=\"url\"\n                className=\"form-control\"\n                value={formValues.link}\n                onChange={handleChange}\n                id=\"link\"\n                name=\"link\"\n                autoComplete=\"link\"\n                placeholder=\"Link\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group px-lg-3\">\n            <label>\n              Comment\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={formValues.comment}\n                onChange={handleChange}\n                id=\"comment\"\n                name=\"comment\"\n                autoComplete=\"comment\"\n                placeholder=\"Comment\"\n              />\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-outline-info ml-3\"\n            disabled={!disableSubmit}\n            style={{ cursor: disableSubmit ? 'pointer' : 'not-allowed' }}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TournamentForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport TournamentForm from '../TournamentForm';\nimport { createTournament } from '../../../../actions/TournamentActions';\n\nconst CreateTournament = () => {\n  const dispatch = useDispatch();\n  const _createTournament = tournament => {\n    dispatch(createTournament(tournament));\n  };\n\n  return (\n    <div className=\"container-fluid page-content\">\n      <h2 className=\"mb-4\">Create New Tournament</h2>\n      <TournamentForm handleSubmit={_createTournament} />\n    </div>\n  );\n};\n\nexport default CreateTournament;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TournamentForm from '../TournamentForm';\nimport {\n  getTournament,\n  updateTournament,\n} from '../../../../actions/TournamentActions';\nimport Spinner from '../../../Spinner/Spinner';\n\nconst EditTournament = ({ match }) => {\n  const tournamentId = parseInt(match.params.id, 10);\n\n  const { tournamentList } = useSelector(state => state.tournament);\n  const tournament = tournamentList.find(({ id }) => id === tournamentId);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const tournamentIndex = tournamentList.findIndex(\n      ({ id }) => id === tournamentId,\n    );\n    if (tournamentIndex < 0) dispatch(getTournament(tournamentId));\n  }, []);\n\n  if (!tournament) {\n    return <Spinner />;\n  }\n\n  function editTournament(_tournament) {\n    dispatch(updateTournament(tournamentId, _tournament));\n  }\n\n  const { startDate, endDate, deadline, ...restTournamentProps } = tournament;\n\n  return (\n    <div className=\"container-fluid page-content\">\n      <h2 className=\"mb-4\">Edit Tournament</h2>\n      <TournamentForm\n        handleSubmit={editTournament}\n        startDate={\n          startDate\n            ? new Date(startDate).toISOString().substr(0, 10)\n            : startDate\n        }\n        endDate={\n          endDate ? new Date(endDate).toISOString().substr(0, 10) : endDate\n        }\n        deadline={\n          deadline ? new Date(deadline).toISOString().substr(0, 10) : deadline\n        }\n        {...restTournamentProps}\n      />\n    </div>\n  );\n};\n\nexport default EditTournament;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Currency from 'react-currency-formatter';\nimport moment from 'moment/moment';\nimport FlexTable from '../../FlexTable/FlexTable';\nimport { DATE_FORMAT } from '../../../constants/applicationConstants';\nimport { patchRegistration } from '../../../actions/RegistrationActions';\n\nconst MemberRowCollapse = ({ history, user }) => {\n  const dispatch = useDispatch();\n  const userTableRows = [\n    ['User ID', user.id],\n    ['Email', user.email],\n    ['Last Debt Mail', moment(user.last_mail).format(DATE_FORMAT)],\n    [\n      'Total Debt',\n      <span className={user.totalDebt > 0 ? 'text-danger' : null}>\n        <Currency quantity={user.totalDebt || 0} currency=\"EUR\" />\n      </span>,\n    ],\n  ];\n\n  const registrationTableColumns = [\n    {\n      dataField: 'id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'name',\n      text: 'Name',\n      sort: true,\n    },\n    {\n      dataField: 'startDate',\n      text: 'Date',\n      classes: 'd-none d-sm-table-cell',\n      headerClasses: 'd-none d-sm-table-cell',\n      sort: true,\n      formatter: cellContent => moment(cellContent).format(DATE_FORMAT),\n    },\n    {\n      dataField: '_pivot_role',\n      text: 'Role',\n      classes: 'd-none d-md-table-cell',\n      headerClasses: 'd-none d-md-table-cell',\n      sort: true,\n    },\n    {\n      dataField: 'debt',\n      isDummyField: true,\n      text: 'Debt',\n      classes: 'text-right text-sm-left',\n      headerClasses: 'text-right text-sm-left',\n      formatter: (cellContent, row) => (\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <span\n            className={\n              row._pivot_price_owed - row._pivot_price_paid > 0\n                ? 'text-danger'\n                : null\n            }\n          >\n            <Currency\n              quantity={row._pivot_price_owed - row._pivot_price_paid || 0}\n              currency=\"EUR\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-light btn-sm ml-2 px-2\"\n              onClick={e => {\n                e.stopPropagation();\n                dispatch(\n                  patchRegistration(row._pivot_id, {\n                    price_paid: row._pivot_price_owed,\n                  }),\n                );\n              }}\n            >\n              €‎\n            </button>\n          </span>\n        </div>\n      ),\n    },\n    {\n      dataField: '_pivot_transaction_date',\n      text: 'Transaction Date',\n      sort: true,\n      classes: 'd-none d-lg-table-cell',\n      headerClasses: 'd-none d-lg-table-cell',\n      formatter: cellContent =>\n        cellContent ? moment(cellContent).format(DATE_FORMAT) : null,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: 'startDate',\n      order: 'desc',\n    },\n  ];\n\n  const forwardToRegistration = {\n    /* eslint-disable camelcase */\n    onClick: (e, { _pivot_id }) => {\n      history.push(`registration/${_pivot_id}`);\n    },\n    /* eslint-enable camelcase */\n  };\n\n  return (\n    <div\n      id={user.id}\n      className=\"d-flex flex-column flex-xl-row p-2 p-md-3 pd-lg-4\"\n    >\n      <div className=\"d-flex flex-column p-0 col-md-8 col-lg-6 col-xl-4\">\n        <h3 className=\"pr-4 pr-sm-0\">\n          {user.firstName} {user.lastName}\n        </h3>\n        <FlexTable\n          key={`userTable_${user.id}`}\n          tableName={`userTable_${user.id}`}\n          bodyRows={userTableRows}\n          striped\n        />\n      </div>\n      <div className=\"d-flex flex-column mt-5 mt-xl-0 ml-xl-4\">\n        <div>\n          <h3>Registrations</h3>\n        </div>\n        {user.tournaments.length ? (\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={user.tournaments}\n            columns={registrationTableColumns}\n            defaultSorted={defaultSorted}\n            rowEvents={forwardToRegistration}\n            rowClasses=\"cursorPointer\"\n            bordered={false}\n          />\n        ) : (\n          <p>{user.firstName} has no registrations yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MemberRowCollapse;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment/moment';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Currency from 'react-currency-formatter';\nimport {\n  DATE_TIME_FORMAT,\n  registrationRoles,\n} from '../../../constants/applicationConstants';\nimport MemberRowCollapse from './MemberRowCollapse';\nimport { SET_EXPANDED_USER_ID } from '../../../constants/action-types';\nimport { calculateTotalUserDebt } from '../../../helpers';\n\nconst membersTableColumns = [\n  {\n    dataField: 'id',\n    text: 'ID',\n    hidden: true,\n  },\n  {\n    dataField: 'firstName',\n    isDummyField: true,\n    text: 'Name',\n    sort: true,\n    formatter: (cellContent, row) => `${row.firstName} ${row.lastName}`,\n  },\n  {\n    dataField: 'totalDebt',\n    text: 'Debt',\n    sort: true,\n    formatter: cellContent => (\n      <span className={cellContent > 0 ? 'text-danger' : null}>\n        <Currency quantity={cellContent || 0} currency=\"EUR\" />\n      </span>\n    ),\n  },\n  {\n    dataField: 'totalTournaments',\n    text: 'Tournaments',\n    classes: 'd-none d-lg-table-cell',\n    headerClasses: 'd-none d-lg-table-cell',\n    sort: true,\n  },\n  {\n    dataField: 'judgingRatio',\n    text: 'Judging Ratio',\n    sort: true,\n  },\n  {\n    dataField: 'totalPoints',\n    text: 'Points',\n    sort: true,\n    classes: 'd-none d-lg-table-cell',\n    headerClasses: 'd-none d-lg-table-cell',\n  },\n  {\n    dataField: 'last_login',\n    text: 'Last Login',\n    classes: 'd-none d-lg-table-cell',\n    headerClasses: 'd-none d-lg-table-cell',\n    sort: true,\n    formatter: cellContent => moment(cellContent).format(DATE_TIME_FORMAT),\n  },\n];\n\nconst MemberList = ({ history }) => {\n  const { users, expandedUserId } = useSelector(state => ({\n    users: state.user.users,\n    expandedUserId: state.user.expandedUserId,\n  }));\n  const enrichedUserList = users.map(user => {\n    const totalPoints = user.tournaments.reduce((total, tournament) => {\n      const addedPoints = moment(tournament.startDate).isBefore(\n        moment().subtract(1, 'years'),\n      )\n        ? 0\n        : tournament._pivot_points;\n      return total + addedPoints;\n    }, 0);\n    const totalTournaments = user.tournaments.length || 0;\n    const totalTournamentsAsJudge =\n      user.tournaments.filter(\n        ({ _pivot_role }) => _pivot_role === registrationRoles.JUDGE,\n      ).length || 0;\n    const judgingRatio =\n      Math.round((totalTournamentsAsJudge * 100) / totalTournaments) || -1;\n    const totalDebt = calculateTotalUserDebt(user);\n\n    return { ...user, totalPoints, totalTournaments, judgingRatio, totalDebt };\n  });\n\n  const dispatch = useDispatch();\n  const setExpandedUserId = userId =>\n    dispatch({ type: SET_EXPANDED_USER_ID, payload: { userId } });\n  const expandRow = {\n    renderer: row => (\n      <MemberRowCollapse key={row.id} user={row} history={history} />\n    ),\n    onlyOneExpanding: true,\n    expanded: [expandedUserId],\n    onExpand: (row, isExpand, rowIndex, e) => {\n      setExpandedUserId(isExpand ? row.id : null);\n      if (isExpand) {\n        const el = e.target;\n        if (!el) return;\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }, 1);\n      }\n    },\n  };\n\n  return (\n    <div className=\"container-fluid page-content\">\n      <h2 className=\"mb-4\">MembersList</h2>\n      <BootstrapTable\n        bootstrap4\n        hover\n        keyField=\"id\"\n        data={enrichedUserList}\n        columns={membersTableColumns}\n        defaultSorted={[\n          {\n            dataField: 'totalDebt',\n            order: 'desc',\n          },\n        ]}\n        rowClasses=\"cursorPointer\"\n        expandRow={expandRow}\n        bordered={false}\n      />\n    </div>\n  );\n};\n\nexport default MemberList;\n","/* eslint-disable camelcase */\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport Currency from 'react-currency-formatter';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nimport {\n  attendanceStatuses,\n  successTypes,\n} from '../../../constants/applicationConstants';\nimport './Registration.scss';\nimport FieldEditor from './FieldEditor';\nimport { patchRegistration } from '../../../actions/RegistrationActions';\n\nconst mapStateToProps = (\n  { user },\n  {\n    match: {\n      params: { id: registrationId },\n    },\n  },\n) => {\n  const regUser = user.users.find(\n    ({ tournaments }) =>\n      tournaments &&\n      tournaments.find(\n        ({ _pivot_id }) => _pivot_id === parseInt(registrationId, 10),\n      ),\n  );\n  return {\n    isAdmin: user.authenticatedUserId\n      ? user.users.find(({ id }) => user.authenticatedUserId === id)\n          .position === 1\n      : false,\n    authenticatedUserId: user.authenticatedUserId,\n    user: regUser,\n    userList: user.users,\n    tournament: regUser\n      ? regUser.tournaments.find(\n          ({ _pivot_id }) => _pivot_id === parseInt(registrationId, 10),\n        )\n      : null,\n  };\n};\n\nconst mapDispatchToProps = {\n  patchRegistration,\n};\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegUpdate = this.handleRegUpdate.bind(this);\n  }\n\n  handleRegUpdate(value, name) {\n    if (value === undefined || !name) return;\n    const { tournament, patchRegistration: updateReg } = this.props;\n\n    updateReg(tournament._pivot_id, {\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      user,\n      tournament,\n      isAdmin,\n      authenticatedUserId,\n      userList,\n      match: {\n        params: { id: regId },\n      },\n    } = this.props;\n    if (!user || !tournament)\n      return (\n        <div className=\"container-fluid\">\n          <h2 className=\"py-4\">\n            Registration not found. You might not have permission to see this\n            registration.\n          </h2>\n        </div>\n      );\n\n    const attendanceStatus =\n      Object.keys(attendanceStatuses).find(\n        statusName =>\n          attendanceStatuses[statusName] === tournament._pivot_attended,\n      ) || '';\n    const dateFormat = 'DD.MM.YYYY';\n    const startDate = tournament.startDate\n      ? moment(tournament.startDate).format(dateFormat)\n      : '';\n    const endDate = tournament.endDate\n      ? moment(tournament.endDate).format(dateFormat)\n      : '';\n    const partner1 = userList.find(\n      ({ id }) => id === tournament._pivot_partner1,\n    );\n    const partner2 = userList.find(\n      ({ id }) => id === tournament._pivot_partner2,\n    );\n    let success = tournament._pivot_attended === 1 ? 'none' : null;\n    const successObj = successTypes.find(\n      ({ id }) => id === tournament._pivot_success,\n    );\n    if (successObj) success = successObj.label;\n\n    const registrationTableRows = [\n      {\n        header: 'User',\n        field:\n          user.firstName && user.lastName\n            ? `${user.firstName} ${user.lastName}`\n            : null,\n      },\n      {\n        header: 'Tournament',\n        field: tournament.name,\n      },\n      {\n        header: 'Date',\n        field:\n          tournament.startDate && tournament.startDate\n            ? `${startDate} - ${endDate}`\n            : null,\n      },\n      {\n        header: 'Role',\n        field: tournament._pivot_role,\n        editType: Type.SELECT,\n        fieldName: 'role',\n        options: [\n          { id: 'judge', label: 'judge' },\n          { id: 'speaker', label: 'speaker' },\n        ],\n      },\n      {\n        header: 'Team Name',\n        field: tournament._pivot_teamname,\n        editType: Type.TEXT,\n        fieldName: 'teamname',\n      },\n      {\n        header: 'Comment',\n        field: tournament._pivot_comment,\n        editType: Type.TEXT,\n        fieldName: 'comment',\n      },\n      {\n        header: 'Independent',\n        field: tournament._pivot_is_independent ? 'Yes' : 'No',\n        editType: Type.CHECKBOX,\n        fieldValue: tournament._pivot_is_independent,\n        fieldName: 'is_independent',\n      },\n      {\n        header: 'Funding',\n        field: tournament._pivot_funding ? 'Yes' : 'No',\n        editType: Type.CHECKBOX,\n        fieldValue: tournament._pivot_funding,\n        fieldName: 'funding',\n      },\n      {\n        header: 'Costs',\n        field:\n          tournament._pivot_attended === 1 ? (\n            <Currency\n              quantity={parseFloat(tournament._pivot_price_owed, 10) || 0}\n              currency=\"EUR\"\n            />\n          ) : null,\n        fieldValue: tournament._pivot_price_owed || 0,\n        editType: Type.TEXT,\n        fieldName: 'price_owed',\n        adminOnlyEdit: true,\n      },\n      {\n        header: 'Price paid',\n        field:\n          tournament._pivot_attended === 1 ? (\n            <Currency\n              quantity={parseFloat(tournament._pivot_price_paid, 10) || 0}\n              currency=\"EUR\"\n            />\n          ) : null,\n        fieldValue: tournament._pivot_price_paid || 0,\n        editType: Type.TEXT,\n        fieldName: 'price_paid',\n        adminOnlyEdit: true,\n      },\n      {\n        header: 'Debt',\n        field:\n          tournament._pivot_attended === 1 ? (\n            <span\n              className={\n                tournament._pivot_price_owed - tournament._pivot_price_paid > 0\n                  ? 'text-danger'\n                  : null\n              }\n            >\n              <Currency\n                quantity={\n                  parseFloat(\n                    tournament._pivot_price_owed - tournament._pivot_price_paid,\n                    10,\n                  ) || 0\n                }\n                currency=\"EUR\"\n              />\n            </span>\n          ) : null,\n      },\n      {\n        header: 'Status',\n        field: attendanceStatus,\n        editType: Type.SELECT,\n        fieldValue: tournament._pivot_attended,\n        fieldName: 'attended',\n        options: Object.keys(attendanceStatuses).map(label => ({\n          id: attendanceStatuses[label],\n          label,\n        })),\n        adminOnlyEdit: true,\n      },\n      {\n        header: 'Success',\n        field: success,\n        editType: Type.SELECT,\n        fieldValue: tournament._pivot_success,\n        fieldName: 'success',\n        options: successTypes,\n      },\n      {\n        header: 'Points',\n        field:\n          tournament._pivot_attended === 1 ? tournament._pivot_points : null,\n      },\n      {\n        header:\n          tournament.format.toLowerCase() === 'opd' ? 'Partner 1' : 'Partner',\n        field: partner1\n          ? `${partner1.firstName} ${partner1.name}`\n          : successTypes\n              .reduce(\n                (acc, { canHavePartner, id }) =>\n                  canHavePartner ? [...acc, id] : acc,\n                [],\n              )\n              .includes(tournament._pivot_success)\n          ? ''\n          : null,\n        fieldName: 'partner1',\n        fieldValue: tournament._pivot_partner1,\n        editType: Type.SELECT,\n        options: [\n          { id: null, label: '' },\n          ...userList.map(({ firstName, name, id }) => ({\n            id,\n            label: `${firstName} ${name}`,\n          })),\n        ],\n      },\n      {\n        header: 'Partner 2',\n        field:\n          tournament.format.toLowerCase() === 'opd'\n            ? partner2\n              ? `${partner2.firstName} ${partner2.name}`\n              : successTypes\n                  .reduce(\n                    (acc, { canHavePartner, id }) =>\n                      canHavePartner ? [...acc, id] : acc,\n                    [],\n                  )\n                  .includes(tournament._pivot_success)\n              ? ''\n              : null\n            : null,\n        fieldName: 'partner2',\n        fieldValue: tournament._pivot_partner2,\n        editType: Type.SELECT,\n        options: [\n          { id: null, bel: '' },\n          ...userList.map(({ firstName, name, id }) => ({\n            id,\n            label: `${firstName} ${name}`,\n          })),\n        ],\n      },\n      {\n        header: 'Transaction from',\n        field:\n          tournament._pivot_attended === 1\n            ? tournament._pivot_transaction_from || ''\n            : null,\n        fieldName: 'transaction_from',\n        fieldValue: tournament.transaction_from,\n        editType: Type.TEXT,\n        adminOnly: true,\n        adminOnlyEdit: true,\n      },\n      {\n        header: 'Transaction date',\n        field:\n          tournament._pivot_attended === 1\n            ? tournament._pivot_transaction_date || ''\n            : null,\n        fieldName: 'transaction_date',\n        fieldValue: tournament.transaction_date,\n        editType: Type.TEXT,\n        adminOnly: true,\n        adminOnlyEdit: true,\n      },\n    ].filter(\n      ({ field, adminOnly }) => field !== null && (!adminOnly || isAdmin),\n    );\n\n    return (\n      <div id=\"registration\" className=\"container page-content\">\n        {user && user.tournaments && (\n          <div className=\"row\">\n            <div className=\"col-12 col-md-9 col-lg-7 col-xl-6 offset-md-1\">\n              <div className=\"d-flex align-items-center\">\n                <h2 className=\"py-4 mr-4\">\n                  Registration\n                  {regId}\n                </h2>\n                {(isAdmin ||\n                  authenticatedUserId === tournament._pivot_user_id) && (\n                  <button\n                    className=\"btn btn-outline-danger\"\n                    type=\"button\"\n                    disabled={\n                      tournament._pivot_attended === attendanceStatuses.Went\n                    }\n                  >\n                    Delete\n                  </button>\n                )}\n              </div>\n              <BootstrapTable\n                bootstrap4\n                keyField=\"id\"\n                data={registrationTableRows.map((row, i) => ({\n                  id: i,\n                  ...row,\n                }))}\n                columns={[\n                  {\n                    dataField: 'header',\n                    text: '',\n                    style: { fontWeight: 'bold' },\n                    editable: false,\n                  },\n                  {\n                    dataField: 'field',\n                    text: '',\n                    editorRenderer: (\n                      editorProps,\n                      value,\n                      { editType, options, fieldName, fieldValue },\n                    ) => {\n                      if (!editType) return null;\n                      return (\n                        <FieldEditor\n                          fieldName={fieldName}\n                          fieldValue={fieldValue}\n                          type={editType}\n                          value={\n                            value.props && value.props.quantity\n                              ? value.props.quantity\n                              : value\n                          }\n                          options={options}\n                          handleChange={this.handleRegUpdate}\n                        />\n                      );\n                    },\n                  },\n                ]}\n                cellEdit={cellEditFactory({\n                  mode: 'click',\n                  blurToSave: true,\n                  nonEditableRows: () =>\n                    registrationTableRows.reduce(\n                      (nonEditRowIds, { adminOnlyEdit, editType }, i) => {\n                        // check if the current user can edit this registration at all\n                        if (!isAdmin && authenticatedUserId !== user.id)\n                          return [...nonEditRowIds, i];\n                        if (!isAdmin && adminOnlyEdit)\n                          return [...nonEditRowIds, i];\n                        if (!editType) return [...nonEditRowIds, i];\n                        return nonEditRowIds;\n                      },\n                      [],\n                    ),\n                })}\n                bordered={false}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Registration);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport moment from 'moment';\nimport { Check, X, Trash2 } from 'react-feather';\n\nimport { BASE_URL, DATE_FORMAT } from '../../../constants/applicationConstants';\nimport {\n  GET_ALL_BUGS,\n  REMOVE_BUG,\n  SET_BUG_STATUS,\n} from '../../../constants/action-types';\nimport BugReportForm from './BugReportForm';\n\nlet haveBugsLoaded;\n\nconst BugList = ({\n  bugList,\n  isAdmin,\n  users,\n  setBugStatus: handleUpdate,\n  deleteBug: handleDelete,\n  getBugList,\n}) => {\n  const [showAll, setShowAll] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isAdmin && !haveBugsLoaded) {\n      getBugList();\n      haveBugsLoaded = true;\n    }\n  }, [isAdmin, getBugList]);\n\n  return (\n    <div className=\"container-fluid page-content\">\n      <BugReportForm />\n\n      {isAdmin && bugList.length ? (\n        <>\n          <h2 className=\"pb-4\">Bug List</h2>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={showAll ? bugList : bugList.filter(({ status }) => !status)}\n            columns={[\n              {\n                dataField: 'description',\n                text: 'Description',\n                sort: true,\n              },\n              {\n                dataField: 'created_at',\n                text: 'Created at',\n                sort: true,\n                headerStyle: () => ({ maxWidth: '160px' }),\n                formatter: cell => moment(cell).format(DATE_FORMAT),\n              },\n              {\n                dataField: 'user_id',\n                text: 'Reported by',\n                isDummyField: true,\n                sort: true,\n                headerStyle: () => ({ maxWidth: '160px' }),\n                /* eslint-disable camelcase */\n                formatter: (a, { user_id }) => {\n                  const user = users.find(({ id }) => id === user_id);\n                  /* eslint-enable camelcase */\n                  if (user && user.lastName && user.firstName)\n                    return `${user.firstName} ${user.lastName}`;\n                  return null;\n                },\n              },\n              {\n                dataField: 'status',\n                text: 'Status',\n                isDummyField: true,\n                sort: true,\n                headerStyle: () => ({ maxWidth: '100px' }),\n                formatter: (cell, { id, status }) => {\n                  return status ? (\n                    <Check\n                      role=\"button\"\n                      onClick={() => {\n                        handleUpdate(id, status ? 0 : 1);\n                      }}\n                    />\n                  ) : (\n                    <X\n                      role=\"button\"\n                      onClick={() => {\n                        handleUpdate(id, status ? 0 : 1);\n                      }}\n                    />\n                  );\n                },\n              },\n              {\n                dataField: '',\n                text: '',\n                isDummyField: true,\n                sort: false,\n                headerStyle: () => ({ maxWidth: '80px' }),\n                formatter: (cell, { id }) => (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-danger\"\n                    onClick={() => handleDelete(id)}\n                  >\n                    <Trash2 />\n                  </button>\n                ),\n              },\n            ]}\n            defaultSorted={[\n              {\n                dataField: 'created_at',\n                order: 'desc',\n              },\n            ]}\n            bordered={false}\n          />\n          <div className=\"d-flex align-items-center flex-column flex-sm-row mt-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-info\"\n              onClick={() => {\n                setShowAll(!showAll);\n              }}\n            >\n              {showAll ? 'Hide ' : 'Show '}\n              resolved issues\n            </button>\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user, bug }) {\n  return {\n    isAdmin: user.authenticatedUserId\n      ? user.users.find(({ id }) => user.authenticatedUserId === id)\n          .position === 1\n      : false,\n    users: user.users,\n    bugList: bug.bugList,\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getBugList: async () => {\n    const response = await fetch(`${BASE_URL}/bugs`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (response.status === 200) {\n      const { data: bugList } = await response.json();\n      if (bugList)\n        dispatch({\n          type: GET_ALL_BUGS,\n          payload: { bugList },\n        });\n    }\n  },\n  setBugStatus: async (bugId, status) => {\n    const response = await fetch(`${BASE_URL}/bugs/${bugId}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Request-Method': 'PUT',\n      },\n      body: JSON.stringify({\n        status,\n      }),\n    });\n    if (response.status === 200) {\n      dispatch({\n        type: SET_BUG_STATUS,\n        payload: { status, bugId },\n      });\n    }\n  },\n  deleteBug: async bugId => {\n    const response = await fetch(`${BASE_URL}/bugs/${bugId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n    });\n    if (response.status === 200) {\n      dispatch({\n        type: REMOVE_BUG,\n        payload: { bugId },\n      });\n    }\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BugList);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { alertTypes, BASE_URL } from '../../../constants/applicationConstants';\nimport { ADD_BUG } from '../../../constants/action-types';\nimport triggerAlert from '../../../actions/actionHelpers';\n\nconst BugReportForm = () => {\n  const dispatch = useDispatch();\n\n  async function postBug(e) {\n    e.preventDefault();\n    const description = e.target[0].value;\n    if (!description) return;\n    const response = await fetch(`${BASE_URL}/bugs`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Request-Method': 'POST',\n      },\n      body: JSON.stringify({\n        type: '-',\n        description,\n      }),\n    });\n    if (response.status === 200) {\n      const { bug: newBug } = await response.json();\n      if (newBug)\n        dispatch({\n          type: ADD_BUG,\n          payload: { newBug },\n        });\n    } else {\n      const { message } = await response.json();\n      triggerAlert(message, alertTypes.WARNING);\n    }\n  }\n\n  return (\n    <div className=\"col-12 col-md-8 col-lg-7 col-xl-5 px-0 pb-4\">\n      <h2>Report an issue</h2>\n      <form onSubmit={postBug}>\n        <textarea\n          className=\"form-control my-2\"\n          placeholder=\"Describe the issue you found\"\n          rows=\"10\"\n        />\n        <button type=\"submit\" className=\"btn btn-outline-info\">\n          Report\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default BugReportForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ArrowUpRight, ArrowDownRight } from 'react-feather';\n\nconst NumberCard = ({ title, number, percentageChange }) => {\n  const roundedPercentageChange = percentageChange\n    ? Math.round((percentageChange - 1) * 100)\n    : null;\n  return (\n    <div className=\"box\">\n      <small className=\"number-card-title\">{title}</small>\n      <span className=\"d-flex justify-content-center align-items-center\">\n        <b className=\"number\">{number}</b>\n        {roundedPercentageChange && (\n          <b\n            className={`ml-2 ${\n              roundedPercentageChange > 0 ? 'text-success' : 'text-danger'\n            }`}\n          >\n            {roundedPercentageChange > 0 && '+'}\n            {roundedPercentageChange}%\n            {roundedPercentageChange > 0 ? (\n              <ArrowUpRight className=\"ml-1\" />\n            ) : (\n              <ArrowDownRight className=\"ml-1\" />\n            )}\n          </b>\n        )}\n      </span>\n    </div>\n  );\n};\n\nNumberCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  percentageChange: PropTypes.number,\n};\n\nNumberCard.defaultProps = {\n  percentageChange: undefined,\n};\n\nexport default NumberCard;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Currency from 'react-currency-formatter';\nimport moment from 'moment';\nimport {\n  Tooltip,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  AreaChart,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport NumberCard from './NumberCard';\nimport './Dashboard.scss';\nimport { BASE_URL } from '../../../constants/applicationConstants';\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nconst Dashboard = () => {\n  const { users, tournaments } = useSelector(state => ({\n    users: state.user.users,\n    tournaments: state.tournament.tournamentList,\n  }));\n  const [debtArray, setDebtArray] = useState([]);\n  useEffect(() => {\n    async function fetchClubDebt() {\n      const response = await fetch(`${BASE_URL}/clubDebt`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (response.status !== 200) return;\n      const { data } = await response.json();\n      if (data.length) setDebtArray(data);\n    }\n    fetchClubDebt();\n  }, []);\n\n  const firstTournamentDate = Math.min(\n    ...tournaments.map(({ startDate }) => moment(startDate).valueOf()),\n  );\n\n  const totalUsers = users.length;\n  const activeUsers = users.filter(\n    user =>\n      user.tournaments.filter(tournament =>\n        moment(tournament.startDate).isAfter(moment().subtract(1, 'years')),\n      ).length,\n  );\n  const activeUsersLastYear = users.filter(\n    user =>\n      user.tournaments.filter(\n        tournament =>\n          moment(tournament.startDate).isAfter(moment().subtract(2, 'years')) &&\n          moment(tournament.startDate).isBefore(moment().subtract(1, 'years')),\n      ).length,\n  );\n  const registeredUsers = users.filter(\n    user =>\n      user.tournaments.filter(tournament =>\n        moment(tournament.startDate).isAfter(moment()),\n      ).length,\n  ).length;\n\n  const victoryData = [\n    ...Array(\n      Math.round(\n        Math.abs(\n          moment.duration(moment(firstTournamentDate).diff(moment())).asDays(),\n        ) / 7,\n      ),\n    ).keys(),\n  ].map(i => {\n    const date = moment(firstTournamentDate).add(i * 7 - 1, 'days');\n    return {\n      date: date.toISOString(),\n      count: tournaments.filter(\n        ({ startDate, users: tournamentUsers }) =>\n          moment(startDate).isBefore(date) &&\n          // eslint-disable-next-line camelcase\n          tournamentUsers.some(({ _pivot_success }) =>\n            ['win', 'win2', 'winESL', 'win2ESL'].includes(_pivot_success),\n          ),\n      ).length,\n    };\n  });\n\n  const activeUsersGenderData = ['m', 'f', '-'].map(name => ({\n    name,\n    value: activeUsers.filter(({ gender }) => gender === name).length,\n  }));\n\n  return (\n    <div className=\"container-fluid\">\n      <div id=\"dashboard\">\n        <NumberCard title=\"Total members\" number={totalUsers} />\n        <NumberCard\n          title=\"Active members 12m\"\n          number={activeUsers.length}\n          percentageChange={activeUsers.length / activeUsersLastYear.length}\n        />\n        <div className=\"box cell-size-3x3 pl-0 pr-3 pt-2 pb-0\">\n          <h5 className=\"py-0 px-4 align-self-start\">Member Debt</h5>\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart\n              data={debtArray.map(([date, debt]) => ({\n                x: date,\n                Debt: debt,\n              }))}\n            >\n              <Area\n                type=\"monotone\"\n                dataKey=\"Debt\"\n                stroke=\"#59D4BB\"\n                fill=\"#59D4BB\"\n                dot={false}\n              />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"x\"\n                tick={{ fontSize: 'x-small' }}\n                tickFormatter={date =>\n                  moment(date, 'YYYYDDMM').format('MMM YY')\n                }\n              />\n              <YAxis unit=\"€\" tick={{ fontSize: 'x-small' }} />\n              <Tooltip\n                formatter={value => (\n                  <Currency quantity={value} currency=\"EUR\" />\n                )}\n                labelFormatter={value => moment(value).format('DD/MM/YYYY')}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"box cell-size-3x2 pl-0 pr-3 pt-2 pb-0\">\n          <h5 className=\"py-0 px-4 align-self-start\">Total Victories: </h5>\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart data={victoryData}>\n              <Area\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"#EB91A3\"\n                fill=\"#EB91A3\"\n                dot={false}\n              />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                tickFormatter={date => moment(date).format('MMM YY')}\n                dataKey=\"date\"\n                tick={{ fontSize: 'x-small' }}\n              />\n              <YAxis tick={{ fontSize: 'x-small' }} />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"box\">\n          <b>{activeUsers.length}</b>\n          <small>Active Members*</small>\n        </div>\n        <div className=\"box cell-size-1x2\">\n          <ResponsiveContainer width=\"100%\" height={150}>\n            <PieChart width={150} height={150}>\n              <Pie\n                dataKey=\"value\"\n                data={activeUsersGenderData}\n                innerRadius={40}\n                outerRadius={80}\n                startAngle={180}\n                endAngle={0}\n                cy={130}\n                label={({ percent }) => `${Math.round(percent * 100)}%`}\n                labelLine={false}\n              >\n                {activeUsersGenderData.map((entry, index) => (\n                  <Cell fill={COLORS[index % COLORS.length]} key={entry.name} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n          <small>Active Users</small>\n        </div>\n        <div className=\"box\">4</div>\n        <div className=\"box\">4</div>\n        <div className=\"box\">\n          <b>{registeredUsers}</b>\n          <small>Registered Members*</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { alertTypes, BASE_URL } from '../../../constants/applicationConstants';\nimport Modal from 'react-modal';\nimport Spinner from '../../Spinner/Spinner';\nimport triggerAlert from '../../../actions/actionHelpers';\n\nimport './CreateWikiLinkModal.scss';\n\nconst CreateWikiLinkModal = ({\n  isOpen,\n  closeModal,\n  handleAddedWikiLink,\n  isLoading = false,\n}) => {\n  // recommended for assistive technology support\n  Modal.setAppElement('.app');\n\n  // function on form submit\n  const postWikiLink = async event => {\n    event.preventDefault();\n\n    // get data html from the form\n    const formData = new FormData(event.target);\n\n    // convert to JSON\n    const jsonData = JSON.stringify(Object.fromEntries(formData));\n\n    // API call and respnonse handling\n    const response = await fetch(`${BASE_URL}/wikiLinks`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Request-Method': 'POST',\n      },\n      body: jsonData,\n    });\n    const body = await response.json();\n    if (response.status === 200) {\n      triggerAlert(body.message, alertTypes.SUCCESS);\n      handleAddedWikiLink();\n    } else {\n      triggerAlert(body.message, alertTypes.WARNING);\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"wikiLinks-creator-modal\"\n      shouldCloseOnOverlayClick\n      onRequestClose={closeModal}\n    >\n      <h2 className=\"mb-3\">Add a New Link to a Document</h2>\n      {isLoading && <Spinner />}\n      {!isLoading && (\n        <form onSubmit={postWikiLink}>\n          <div className=\"wiki-links-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"title\"\n                autoComplete=\"title\"\n                placeholder=\"A Short Title\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"topic\">Topic</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"topic\"\n                autoComplete=\"topic\"\n                placeholder=\"one word topic\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"url\">Link</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"url\"\n                autoComplete=\"url\"\n                placeholder=\"full link to document\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                rows=\"4\"\n                className=\"form-control\"\n                name=\"description\"\n                autoComplete=\"description\"\n                placeholder=\"Describe purpose and contents of the linked document\"\n                required\n              />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-outline-success mr-3\">\n            Add Link\n          </button>\n          <button\n            className=\"btn btn-outline-dark mr-3\"\n            type=\"button\"\n            onClick={closeModal}\n          >\n            Close\n          </button>\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default CreateWikiLinkModal;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport './WikiLinkList.scss';\nimport triggerAlert from '../../../actions/actionHelpers';\nimport {\n  alertTypes,\n  BASE_URL,\n  DATE_FORMAT,\n} from '../../../constants/applicationConstants';\n\n// feature for expanded rows disabled, keep code fragments for possible later use\n\n/* import TournamentRowCollapse from './TournamentRowCollapse';\nimport {\n  SET_EXPANDED_TOURNAMENT_ID,\n  TOGGLE_SHOW_PREV_TOURNAMENTS,\n} from '../../../../constants/action-types'; */\n\nimport CreateWikiLinkModal from './CreateWikiLinkModal';\n\nconst WikiLinkList = ({ isAdmin }) => {\n  // define the bootstrap table colums\n  const tableColumns = [\n    {\n      dataField: 'id',\n      text: 'ID',\n      hidden: true,\n    },\n    {\n      dataField: 'title',\n      text: 'Title',\n      sort: true,\n      style: { wordBreak: 'break-word' },\n    },\n    {\n      dataField: 'url',\n      text: 'Link',\n      style: { wordBreak: 'break-word' },\n      formatter: (cellContent, row) => {\n        return (\n          <a href={row.url} target=\"_blank\">\n            Open Document\n          </a>\n        );\n      },\n    },\n    {\n      dataField: 'topic',\n      text: 'Topic',\n      sort: true,\n      classes: 'd-none d-lg-table-cell',\n      headerClasses: 'd-none d-lg-table-cell',\n      formatter: (cellContent, row) => row.topic.toUpperCase(),\n    },\n    {\n      dataField: 'created_at',\n      isDummyField: true,\n      text: 'Added to Collection',\n      sort: true,\n      sortFunc: (a, b, order) => {\n        if (order === 'asc') {\n          return moment(a).isAfter(moment(b))\n            ? 1\n            : moment(a).isBefore(moment(b))\n            ? -1\n            : 0;\n        }\n        return moment(a).isAfter(moment(b))\n          ? -1\n          : moment(a).isBefore(moment(b))\n          ? 1\n          : 0;\n      },\n      formatter: (cellContent, addedAt) =>\n        `${moment(addedAt).format(DATE_FORMAT)}`,\n    },\n  ];\n\n  // code disabled, keep for possible later use\n  /* const { expandedTournamentId, tournaments } = useSelector(\n    ({\n      howto: {\n        tournamentList,\n        showPreviousTournaments,\n        expandedTournamentId: tId,\n      },\n    }) => ({\n      tournaments: showPreviousTournaments\n        ? tournamentList\n        : tournamentList.filter(({ enddate }) =>\n            moment(enddate).isAfter(moment()),\n          ),\n      expandedTournamentId: tId,\n    }),\n  ); */\n\n  /* const dispatch = useDispatch(); */\n  /* const handleToggle = useCallback(() =>\n    dispatch({ type: TOGGLE_SHOW_PREV_TOURNAMENTS }),\n  );\n  const setExpandedTournamentId = tournamentId =>\n    dispatch({ type: SET_EXPANDED_TOURNAMENT_ID, payload: { tournamentId } }); */\n\n  // add the entry list to the state of the component\n  const [entryList, setEntryList] = useState([]);\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  async function fetchWikiLinks() {\n    const response = await fetch(`${BASE_URL}/wikiLinks`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (response.status === 200) {\n      const { data: links } = await response.json();\n      if (links) setEntryList(links);\n    }\n  }\n\n  // define behaviour on render of the component\n  useEffect(() => {\n    fetchWikiLinks();\n  }, []); // only render one time\n\n  // definde behaviour of onClick of an entry\n  const expandRow = {\n    renderer: row => (\n      <div>\n        <p>{row.description}</p>\n        <p>\n          URL:{' '}\n          <a href={row.url} target=\"_blank\">\n            {row.url}\n          </a>\n        </p>\n        <button\n          onClick={() => {\n            handleDeleteClick(row.id);\n          }}\n          type=\"button\"\n          className=\"btn btn-outline-danger ml-2\"\n        >\n          Delete\n        </button>\n      </div>\n    ),\n    onlyOneExpanding: false,\n    onExpand: (row, isExpand, rowIndex, e) => {\n      // setExpandedTournamentId(isExpand ? row.id : null);\n      if (isExpand) {\n        const el = e.target;\n        if (!el) return;\n        setTimeout(() => {\n          el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }, 1);\n      }\n    },\n    // expanded: [expandedTournamentId],\n  };\n\n  const handleDeleteClick = linkId => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete this link?',\n      buttons: [\n        {\n          label: 'Yes',\n          class: 'btn btn-success',\n          onClick: () => deleteWikiLink(linkId),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  async function deleteWikiLink(linkId) {\n    const response = await fetch(`${BASE_URL}/wikiLinks/${linkId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n    });\n    const body = await response.json();\n    if (response.status === 200) {\n      triggerAlert(body.message, alertTypes.SUCCESS);\n      fetchWikiLinks();\n    } else triggerAlert(body.message, alertTypes.WARNING);\n  }\n\n  const handleAddedWikiLink = () => {\n    fetchWikiLinks();\n    setModalIsOpen(false);\n  };\n  return (\n    <div className=\"container-fluid page-content\">\n      <h2 className=\"mb-4\">HowTos, Templates, Documents</h2>\n      <p>\n        Find a selection of HowTos, Templates and other documents that are\n        usefull for debating.\n      </p>\n      {isAdmin ? (\n        <p>\n          As an admin, you can add new links to documents:\n          <button\n            className=\"btn btn-outline-success ml-3\"\n            type=\"button\"\n            onClick={() => {\n              setModalIsOpen(true);\n            }}\n          >\n            Add Document\n          </button>\n          <CreateWikiLinkModal\n            isOpen={modalIsOpen}\n            closeModal={() => {\n              setModalIsOpen(false);\n            }}\n            handleAddedWikiLink={handleAddedWikiLink}\n          />\n        </p>\n      ) : null}\n      <p></p>\n      <BootstrapTable\n        bootstrap4\n        hover\n        keyField=\"id\"\n        data={entryList}\n        columns={tableColumns}\n        defaultSorted={[\n          {\n            dataField: 'created_at',\n            order: 'desc',\n          },\n        ]}\n        rowClasses=\"cursorPointer\"\n        expandRow={expandRow}\n        bordered={false}\n      />\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    // helper function to handle admin authentication\n    // COMMENT: tobi thinks this should be somewhere more central to avoid redundant code\n    isAdmin: user.authenticatedUserId\n      ? user.users.find(({ id }) => user.authenticatedUserId === id)\n          .position === 1\n      : false,\n  };\n}\n\nexport default connect(mapStateToProps)(WikiLinkList);\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { getAppData } from \"../actions/AuthActions\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Footer from \"./Footer/Footer\";\nimport Login from \"./Pages/Login/Login\";\nimport Signup from \"./Pages/profilePages/Signup/Signup\";\nimport Home from \"./Pages/Home/Home\";\nimport Profile from \"./Pages/profilePages/Profile/Profile\";\nimport TournamentList from \"./Pages/tournamentPages/TournamentList/TournamentList\";\nimport CreateTournament from \"./Pages/tournamentPages/CreateTournament/CreateTournament\";\nimport EditTournament from \"./Pages/tournamentPages/EditTournament/EditTournament\";\nimport MemberList from \"./Pages/MemberList/MemberList\";\nimport Registration from \"./Pages/Registration/Registration\";\nimport BugList from \"./Pages/BugList/BugList\";\nimport Dashboard from \"./Pages/Dashboard/Dashboard\";\nimport Spinner from \"./Spinner/Spinner\";\nimport WikiLinkList from \"./Pages/WikiLinkList/WikiLinkList\";\n\nconst App = ({ history }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAppData());\n  }, [dispatch]);\n\n  const {\n    isAuthenticated,\n    authenticatedUser,\n    authCheckHasFinished\n  } = useSelector(({ user }) => ({\n    ...user,\n    authenticatedUser: user.authenticatedUserId\n      ? user.users.find(({ id }) => user.authenticatedUserId === id)\n      : {}\n  }));\n\n  if (!authCheckHasFinished) {\n    return (\n      <div className=\"app\">\n        <Navbar history={history} />\n        <main className=\"mainContent d-flex justify-content-center align-items-center\">\n          <Spinner xl />\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  const AuthenticationRoute = ({ component: ComponentToRender, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <ComponentToRender {...props} />\n      }\n    />\n  );\n  const PrivateRoute = ({ component: ComponentToRender, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated ? (\n          <ComponentToRender {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n  const AdminRoute = ({ component: ComponentToRender, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated && authenticatedUser.position ? (\n          <ComponentToRender {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  const noPaddingPages = [\"/login\", \"/signup\"];\n\n  return (\n    <div className=\"app\">\n      <Navbar\n        isAuthenticated={isAuthenticated}\n        authenticatedUser={authenticatedUser}\n        history={history}\n      />\n      <main\n        className=\"mainContent\"\n        style={{\n          padding: noPaddingPages.includes(history.location.pathname) ? 0 : \"\"\n        }}\n      >\n        <Switch>\n          <AuthenticationRoute path=\"/login\" component={Login} />\n          <AuthenticationRoute path=\"/signup\" component={Signup} />\n\n          <Route path=\"/bug\" component={BugList} />\n\n          <PrivateRoute exact path=\"/tournament\" component={TournamentList} />\n          <AdminRoute path=\"/tournament/:id\" component={EditTournament} />\n\n          <PrivateRoute path=\"/registration/:id\" component={Registration} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n          <PrivateRoute path=\"/wikiLinks\" component={WikiLinkList} />\n\n          <AdminRoute path=\"/createTournament\" component={CreateTournament} />\n\n          <AdminRoute path=\"/member\" component={MemberList} />\n\n          <PrivateRoute path=\"/edit\" component={Profile} />\n          <PrivateRoute path=\"/home\" component={Home} />\n\n          <PrivateRoute path=\"/\" component={TournamentList} />\n        </Switch>\n      </main>\n      <Footer />\n      <NotificationContainer />\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './css/index.scss';\nimport './css/colors.scss';\nimport './css/scrollbar.scss';\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/js/src/dropdown';\nimport 'bootstrap/js/src/modal';\nimport 'bootstrap/js/src/collapse';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\nserviceWorker.register();\n"],"sourceRoot":""}